// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebook/ent/dialect/sql/schema"
	"github.com/facebook/ent/schema/field"
)

var (
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "changed_field", Type: field.TypeEnum, Enums: []string{"STATUS", "PRIORITY", "ASSIGNEE", "CREATION_DATE", "OWNER", "NAME", "DESCRIPTION", "CLOCK_IN", "CLOCK_OUT"}},
		{Name: "is_create", Type: field.TypeBool},
		{Name: "old_value", Type: field.TypeString, Nullable: true},
		{Name: "new_value", Type: field.TypeString, Nullable: true},
		{Name: "clock_details", Type: field.TypeJSON, Nullable: true},
		{Name: "activity_author", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_activities", Type: field.TypeInt, Nullable: true},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:       "activities",
		Columns:    ActivitiesColumns,
		PrimaryKey: []*schema.Column{ActivitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "activities_users_author",
				Columns: []*schema.Column{ActivitiesColumns[8]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "activities_work_orders_activities",
				Columns: []*schema.Column{ActivitiesColumns[9]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AlarmFiltersColumns holds the columns for the "alarm_filters" table.
	AlarmFiltersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "network_resource", Type: field.TypeString},
		{Name: "begin_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "reason", Type: field.TypeString},
		{Name: "user", Type: field.TypeString},
		{Name: "creation_time", Type: field.TypeTime},
		{Name: "enable", Type: field.TypeBool},
		{Name: "alarm_status_alarm_status_fk", Type: field.TypeInt, Nullable: true},
	}
	// AlarmFiltersTable holds the schema information for the "alarm_filters" table.
	AlarmFiltersTable = &schema.Table{
		Name:       "alarm_filters",
		Columns:    AlarmFiltersColumns,
		PrimaryKey: []*schema.Column{AlarmFiltersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "alarm_filters_alarm_status_alarmStatusFk",
				Columns: []*schema.Column{AlarmFiltersColumns[11]},

				RefColumns: []*schema.Column{AlarmStatusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AlarmStatusColumns holds the columns for the "alarm_status" table.
	AlarmStatusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// AlarmStatusTable holds the schema information for the "alarm_status" table.
	AlarmStatusTable = &schema.Table{
		Name:        "alarm_status",
		Columns:     AlarmStatusColumns,
		PrimaryKey:  []*schema.Column{AlarmStatusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// AppointmentsColumns holds the columns for the "appointments" table.
	AppointmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "start", Type: field.TypeTime},
		{Name: "end", Type: field.TypeTime},
		{Name: "duration", Type: field.TypeFloat64},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"ACTIVE", "CANCELLED"}, Default: "ACTIVE"},
		{Name: "creation_date", Type: field.TypeTime},
		{Name: "user_appointment", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_appointment", Type: field.TypeInt, Nullable: true},
	}
	// AppointmentsTable holds the schema information for the "appointments" table.
	AppointmentsTable = &schema.Table{
		Name:       "appointments",
		Columns:    AppointmentsColumns,
		PrimaryKey: []*schema.Column{AppointmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "appointments_users_appointment",
				Columns: []*schema.Column{AppointmentsColumns[8]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "appointments_work_orders_appointment",
				Columns: []*schema.Column{AppointmentsColumns[9]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "appointment_start",
				Unique:  false,
				Columns: []*schema.Column{AppointmentsColumns[3]},
			},
			{
				Name:    "appointment_end",
				Unique:  false,
				Columns: []*schema.Column{AppointmentsColumns[4]},
			},
			{
				Name:    "appointment_work_order_appointment",
				Unique:  false,
				Columns: []*schema.Column{AppointmentsColumns[9]},
			},
		},
	}
	// BlocksColumns holds the columns for the "blocks" table.
	BlocksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "cid", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"START", "END", "DECISION", "SUB_FLOW", "GO_TO", "TRIGGER", "ACTION", "TRUE_FALSE"}},
		{Name: "action_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"work_order", "update_inventory", "update_workforce", "worker"}},
		{Name: "trigger_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"work_order"}},
		{Name: "start_param_definitions", Type: field.TypeJSON, Nullable: true},
		{Name: "input_params", Type: field.TypeJSON, Nullable: true},
		{Name: "ui_representation", Type: field.TypeJSON, Nullable: true},
		{Name: "block_sub_flow", Type: field.TypeInt, Nullable: true},
		{Name: "block_goto_block", Type: field.TypeInt, Nullable: true},
		{Name: "flow_blocks", Type: field.TypeInt, Nullable: true},
		{Name: "flow_draft_blocks", Type: field.TypeInt, Nullable: true},
		{Name: "flow_execution_template_blocks", Type: field.TypeInt, Nullable: true},
	}
	// BlocksTable holds the schema information for the "blocks" table.
	BlocksTable = &schema.Table{
		Name:       "blocks",
		Columns:    BlocksColumns,
		PrimaryKey: []*schema.Column{BlocksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "blocks_flows_sub_flow",
				Columns: []*schema.Column{BlocksColumns[10]},

				RefColumns: []*schema.Column{FlowsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "blocks_blocks_goto_block",
				Columns: []*schema.Column{BlocksColumns[11]},

				RefColumns: []*schema.Column{BlocksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "blocks_flows_blocks",
				Columns: []*schema.Column{BlocksColumns[12]},

				RefColumns: []*schema.Column{FlowsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "blocks_flow_drafts_blocks",
				Columns: []*schema.Column{BlocksColumns[13]},

				RefColumns: []*schema.Column{FlowDraftsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "blocks_flow_execution_templates_blocks",
				Columns: []*schema.Column{BlocksColumns[14]},

				RefColumns: []*schema.Column{FlowExecutionTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "block_cid_flow_draft_blocks",
				Unique:  true,
				Columns: []*schema.Column{BlocksColumns[3], BlocksColumns[13]},
			},
			{
				Name:    "block_cid_flow_blocks",
				Unique:  true,
				Columns: []*schema.Column{BlocksColumns[3], BlocksColumns[12]},
			},
			{
				Name:    "block_cid_flow_execution_template_blocks",
				Unique:  true,
				Columns: []*schema.Column{BlocksColumns[3], BlocksColumns[14]},
			},
		},
	}
	// BlockInstancesColumns holds the columns for the "block_instances" table.
	BlockInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PENDING", "IN_PROGRESS", "FAILED", "COMPLETED", "WAITING"}, Default: "PENDING"},
		{Name: "inputs", Type: field.TypeJSON, Nullable: true},
		{Name: "outputs", Type: field.TypeJSON, Nullable: true},
		{Name: "failure_reason", Type: field.TypeString, Nullable: true},
		{Name: "block_instance_counter", Type: field.TypeInt, Nullable: true},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "block_instance_block", Type: field.TypeInt, Nullable: true},
		{Name: "flow_instance_blocks", Type: field.TypeInt, Nullable: true},
	}
	// BlockInstancesTable holds the schema information for the "block_instances" table.
	BlockInstancesTable = &schema.Table{
		Name:       "block_instances",
		Columns:    BlockInstancesColumns,
		PrimaryKey: []*schema.Column{BlockInstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "block_instances_blocks_block",
				Columns: []*schema.Column{BlockInstancesColumns[10]},

				RefColumns: []*schema.Column{BlocksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "block_instances_flow_instances_blocks",
				Columns: []*schema.Column{BlockInstancesColumns[11]},

				RefColumns: []*schema.Column{FlowInstancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CheckListCategoriesColumns holds the columns for the "check_list_categories" table.
	CheckListCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "work_order_check_list_categories", Type: field.TypeInt, Nullable: true},
	}
	// CheckListCategoriesTable holds the schema information for the "check_list_categories" table.
	CheckListCategoriesTable = &schema.Table{
		Name:       "check_list_categories",
		Columns:    CheckListCategoriesColumns,
		PrimaryKey: []*schema.Column{CheckListCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "check_list_categories_work_orders_check_list_categories",
				Columns: []*schema.Column{CheckListCategoriesColumns[5]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CheckListCategoryDefinitionsColumns holds the columns for the "check_list_category_definitions" table.
	CheckListCategoryDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "work_order_template_check_list_category_definitions", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_type_check_list_category_definitions", Type: field.TypeInt, Nullable: true},
	}
	// CheckListCategoryDefinitionsTable holds the schema information for the "check_list_category_definitions" table.
	CheckListCategoryDefinitionsTable = &schema.Table{
		Name:       "check_list_category_definitions",
		Columns:    CheckListCategoryDefinitionsColumns,
		PrimaryKey: []*schema.Column{CheckListCategoryDefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "check_list_category_definitions_work_order_templates_check_list_category_definitions",
				Columns: []*schema.Column{CheckListCategoryDefinitionsColumns[5]},

				RefColumns: []*schema.Column{WorkOrderTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "check_list_category_definitions_work_order_types_check_list_category_definitions",
				Columns: []*schema.Column{CheckListCategoryDefinitionsColumns[6]},

				RefColumns: []*schema.Column{WorkOrderTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CheckListItemsColumns holds the columns for the "check_list_items" table.
	CheckListItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "title", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"simple", "string", "enum", "files", "yes_no", "cell_scan", "wifi_scan"}},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "is_mandatory", Type: field.TypeBool, Nullable: true},
		{Name: "checked", Type: field.TypeBool, Nullable: true},
		{Name: "string_val", Type: field.TypeString, Nullable: true},
		{Name: "enum_values", Type: field.TypeString, Nullable: true},
		{Name: "enum_selection_mode_value", Type: field.TypeEnum, Nullable: true, Enums: []string{"multiple", "single"}},
		{Name: "selected_enum_values", Type: field.TypeString, Nullable: true},
		{Name: "yes_no_val", Type: field.TypeEnum, Nullable: true, Enums: []string{"YES", "NO"}},
		{Name: "help_text", Type: field.TypeString, Nullable: true},
		{Name: "check_list_category_check_list_items", Type: field.TypeInt, Nullable: true},
	}
	// CheckListItemsTable holds the schema information for the "check_list_items" table.
	CheckListItemsTable = &schema.Table{
		Name:       "check_list_items",
		Columns:    CheckListItemsColumns,
		PrimaryKey: []*schema.Column{CheckListItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "check_list_items_check_list_categories_check_list_items",
				Columns: []*schema.Column{CheckListItemsColumns[12]},

				RefColumns: []*schema.Column{CheckListCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CheckListItemDefinitionsColumns holds the columns for the "check_list_item_definitions" table.
	CheckListItemDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "title", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"simple", "string", "enum", "files", "yes_no", "cell_scan", "wifi_scan"}},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "is_mandatory", Type: field.TypeBool, Nullable: true},
		{Name: "enum_values", Type: field.TypeString, Nullable: true},
		{Name: "enum_selection_mode_value", Type: field.TypeEnum, Nullable: true, Enums: []string{"multiple", "single"}},
		{Name: "help_text", Type: field.TypeString, Nullable: true},
		{Name: "check_list_category_definition_check_list_item_definitions", Type: field.TypeInt, Nullable: true},
	}
	// CheckListItemDefinitionsTable holds the schema information for the "check_list_item_definitions" table.
	CheckListItemDefinitionsTable = &schema.Table{
		Name:       "check_list_item_definitions",
		Columns:    CheckListItemDefinitionsColumns,
		PrimaryKey: []*schema.Column{CheckListItemDefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "check_list_item_definitions_check_list_category_definitions_check_list_item_definitions",
				Columns: []*schema.Column{CheckListItemDefinitionsColumns[10]},

				RefColumns: []*schema.Column{CheckListCategoryDefinitionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "text", Type: field.TypeString},
		{Name: "comment_author", Type: field.TypeInt, Nullable: true},
		{Name: "project_comments", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_comments", Type: field.TypeInt, Nullable: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "comments_users_author",
				Columns: []*schema.Column{CommentsColumns[4]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "comments_projects_comments",
				Columns: []*schema.Column{CommentsColumns[5]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "comments_work_orders_comments",
				Columns: []*schema.Column{CommentsColumns[6]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ComparatorsColumns holds the columns for the "comparators" table.
	ComparatorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// ComparatorsTable holds the schema information for the "comparators" table.
	ComparatorsTable = &schema.Table{
		Name:        "comparators",
		Columns:     ComparatorsColumns,
		PrimaryKey:  []*schema.Column{ComparatorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CountersColumns holds the columns for the "counters" table.
	CountersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "external_id", Type: field.TypeString},
		{Name: "network_manager_system", Type: field.TypeString},
		{Name: "counter_family_counterfamily", Type: field.TypeInt, Nullable: true},
		{Name: "vendor_vendor_fk", Type: field.TypeInt, Nullable: true},
	}
	// CountersTable holds the schema information for the "counters" table.
	CountersTable = &schema.Table{
		Name:       "counters",
		Columns:    CountersColumns,
		PrimaryKey: []*schema.Column{CountersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "counters_counter_families_counterfamily",
				Columns: []*schema.Column{CountersColumns[6]},

				RefColumns: []*schema.Column{CounterFamiliesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "counters_vendors_vendor_fk",
				Columns: []*schema.Column{CountersColumns[7]},

				RefColumns: []*schema.Column{VendorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CounterFamiliesColumns holds the columns for the "counter_families" table.
	CounterFamiliesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// CounterFamiliesTable holds the schema information for the "counter_families" table.
	CounterFamiliesTable = &schema.Table{
		Name:        "counter_families",
		Columns:     CounterFamiliesColumns,
		PrimaryKey:  []*schema.Column{CounterFamiliesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// CounterFormulasColumns holds the columns for the "counter_formulas" table.
	CounterFormulasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "mandatory", Type: field.TypeBool},
		{Name: "counter_counter_fk", Type: field.TypeInt, Nullable: true},
		{Name: "formula_counterformula", Type: field.TypeInt, Nullable: true},
	}
	// CounterFormulasTable holds the schema information for the "counter_formulas" table.
	CounterFormulasTable = &schema.Table{
		Name:       "counter_formulas",
		Columns:    CounterFormulasColumns,
		PrimaryKey: []*schema.Column{CounterFormulasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "counter_formulas_counters_counter_fk",
				Columns: []*schema.Column{CounterFormulasColumns[4]},

				RefColumns: []*schema.Column{CountersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "counter_formulas_formulas_counterformula",
				Columns: []*schema.Column{CounterFormulasColumns[5]},

				RefColumns: []*schema.Column{FormulasColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "external_id", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:        "customers",
		Columns:     CustomersColumns,
		PrimaryKey:  []*schema.Column{CustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// DocumentCategoriesColumns holds the columns for the "document_categories" table.
	DocumentCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "location_type_document_category", Type: field.TypeInt, Nullable: true},
	}
	// DocumentCategoriesTable holds the schema information for the "document_categories" table.
	DocumentCategoriesTable = &schema.Table{
		Name:       "document_categories",
		Columns:    DocumentCategoriesColumns,
		PrimaryKey: []*schema.Column{DocumentCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "document_categories_location_types_document_category",
				Columns: []*schema.Column{DocumentCategoriesColumns[5]},

				RefColumns: []*schema.Column{LocationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "documentcategory_name_location_type_document_category",
				Unique:  true,
				Columns: []*schema.Column{DocumentCategoriesColumns[3], DocumentCategoriesColumns[5]},
			},
		},
	}
	// DomainsColumns holds the columns for the "domains" table.
	DomainsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// DomainsTable holds the schema information for the "domains" table.
	DomainsTable = &schema.Table{
		Name:        "domains",
		Columns:     DomainsColumns,
		PrimaryKey:  []*schema.Column{DomainsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EntryPointsColumns holds the columns for the "entry_points" table.
	EntryPointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"DEFAULT"}},
		{Name: "cid", Type: field.TypeString, Nullable: true},
		{Name: "block_entry_point", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// EntryPointsTable holds the schema information for the "entry_points" table.
	EntryPointsTable = &schema.Table{
		Name:       "entry_points",
		Columns:    EntryPointsColumns,
		PrimaryKey: []*schema.Column{EntryPointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "entry_points_blocks_entry_point",
				Columns: []*schema.Column{EntryPointsColumns[5]},

				RefColumns: []*schema.Column{BlocksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "entrypoint_cid_block_entry_point",
				Unique:  true,
				Columns: []*schema.Column{EntryPointsColumns[4], EntryPointsColumns[5]},
			},
		},
	}
	// EquipmentColumns holds the columns for the "equipment" table.
	EquipmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "future_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTALL", "REMOVE"}},
		{Name: "device_id", Type: field.TypeString, Nullable: true},
		{Name: "external_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "equipment_type", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_work_order", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_position_attachment", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "location_equipment", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentTable holds the schema information for the "equipment" table.
	EquipmentTable = &schema.Table{
		Name:       "equipment",
		Columns:    EquipmentColumns,
		PrimaryKey: []*schema.Column{EquipmentColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_equipment_types_type",
				Columns: []*schema.Column{EquipmentColumns[7]},

				RefColumns: []*schema.Column{EquipmentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_work_orders_work_order",
				Columns: []*schema.Column{EquipmentColumns[8]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_equipment_positions_attachment",
				Columns: []*schema.Column{EquipmentColumns[9]},

				RefColumns: []*schema.Column{EquipmentPositionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_locations_equipment",
				Columns: []*schema.Column{EquipmentColumns[10]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EquipmentCategoriesColumns holds the columns for the "equipment_categories" table.
	EquipmentCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// EquipmentCategoriesTable holds the schema information for the "equipment_categories" table.
	EquipmentCategoriesTable = &schema.Table{
		Name:        "equipment_categories",
		Columns:     EquipmentCategoriesColumns,
		PrimaryKey:  []*schema.Column{EquipmentCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EquipmentPortsColumns holds the columns for the "equipment_ports" table.
	EquipmentPortsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "equipment_ports", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_port_definition", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_port_link", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentPortsTable holds the schema information for the "equipment_ports" table.
	EquipmentPortsTable = &schema.Table{
		Name:       "equipment_ports",
		Columns:    EquipmentPortsColumns,
		PrimaryKey: []*schema.Column{EquipmentPortsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_ports_equipment_ports",
				Columns: []*schema.Column{EquipmentPortsColumns[3]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_ports_equipment_port_definitions_definition",
				Columns: []*schema.Column{EquipmentPortsColumns[4]},

				RefColumns: []*schema.Column{EquipmentPortDefinitionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_ports_links_link",
				Columns: []*schema.Column{EquipmentPortsColumns[5]},

				RefColumns: []*schema.Column{LinksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "equipmentport_equipment_port_definition_equipment_ports",
				Unique:  true,
				Columns: []*schema.Column{EquipmentPortsColumns[4], EquipmentPortsColumns[3]},
			},
		},
	}
	// EquipmentPortDefinitionsColumns holds the columns for the "equipment_port_definitions" table.
	EquipmentPortDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "bandwidth", Type: field.TypeString, Nullable: true},
		{Name: "visibility_label", Type: field.TypeString, Nullable: true},
		{Name: "equipment_port_definition_equipment_port_type", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_type_port_definitions", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentPortDefinitionsTable holds the schema information for the "equipment_port_definitions" table.
	EquipmentPortDefinitionsTable = &schema.Table{
		Name:       "equipment_port_definitions",
		Columns:    EquipmentPortDefinitionsColumns,
		PrimaryKey: []*schema.Column{EquipmentPortDefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_port_definitions_equipment_port_types_equipment_port_type",
				Columns: []*schema.Column{EquipmentPortDefinitionsColumns[7]},

				RefColumns: []*schema.Column{EquipmentPortTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_port_definitions_equipment_types_port_definitions",
				Columns: []*schema.Column{EquipmentPortDefinitionsColumns[8]},

				RefColumns: []*schema.Column{EquipmentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EquipmentPortTypesColumns holds the columns for the "equipment_port_types" table.
	EquipmentPortTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// EquipmentPortTypesTable holds the schema information for the "equipment_port_types" table.
	EquipmentPortTypesTable = &schema.Table{
		Name:        "equipment_port_types",
		Columns:     EquipmentPortTypesColumns,
		PrimaryKey:  []*schema.Column{EquipmentPortTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EquipmentPositionsColumns holds the columns for the "equipment_positions" table.
	EquipmentPositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "equipment_positions", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_position_definition", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentPositionsTable holds the schema information for the "equipment_positions" table.
	EquipmentPositionsTable = &schema.Table{
		Name:       "equipment_positions",
		Columns:    EquipmentPositionsColumns,
		PrimaryKey: []*schema.Column{EquipmentPositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_positions_equipment_positions",
				Columns: []*schema.Column{EquipmentPositionsColumns[3]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "equipment_positions_equipment_position_definitions_definition",
				Columns: []*schema.Column{EquipmentPositionsColumns[4]},

				RefColumns: []*schema.Column{EquipmentPositionDefinitionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "equipmentposition_equipment_position_definition_equipment_positions",
				Unique:  true,
				Columns: []*schema.Column{EquipmentPositionsColumns[4], EquipmentPositionsColumns[3]},
			},
		},
	}
	// EquipmentPositionDefinitionsColumns holds the columns for the "equipment_position_definitions" table.
	EquipmentPositionDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "visibility_label", Type: field.TypeString, Nullable: true},
		{Name: "equipment_type_position_definitions", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentPositionDefinitionsTable holds the schema information for the "equipment_position_definitions" table.
	EquipmentPositionDefinitionsTable = &schema.Table{
		Name:       "equipment_position_definitions",
		Columns:    EquipmentPositionDefinitionsColumns,
		PrimaryKey: []*schema.Column{EquipmentPositionDefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_position_definitions_equipment_types_position_definitions",
				Columns: []*schema.Column{EquipmentPositionDefinitionsColumns[6]},

				RefColumns: []*schema.Column{EquipmentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EquipmentTypesColumns holds the columns for the "equipment_types" table.
	EquipmentTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "equipment_type_category", Type: field.TypeInt, Nullable: true},
	}
	// EquipmentTypesTable holds the schema information for the "equipment_types" table.
	EquipmentTypesTable = &schema.Table{
		Name:       "equipment_types",
		Columns:    EquipmentTypesColumns,
		PrimaryKey: []*schema.Column{EquipmentTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_types_equipment_categories_category",
				Columns: []*schema.Column{EquipmentTypesColumns[4]},

				RefColumns: []*schema.Column{EquipmentCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EventSeveritiesColumns holds the columns for the "event_severities" table.
	EventSeveritiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// EventSeveritiesTable holds the schema information for the "event_severities" table.
	EventSeveritiesTable = &schema.Table{
		Name:        "event_severities",
		Columns:     EventSeveritiesColumns,
		PrimaryKey:  []*schema.Column{EventSeveritiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ExitPointsColumns holds the columns for the "exit_points" table.
	ExitPointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"DEFAULT", "DECISION", "TRUE", "FALSE"}},
		{Name: "cid", Type: field.TypeString, Nullable: true},
		{Name: "condition", Type: field.TypeJSON, Nullable: true},
		{Name: "block_exit_points", Type: field.TypeInt, Nullable: true},
	}
	// ExitPointsTable holds the schema information for the "exit_points" table.
	ExitPointsTable = &schema.Table{
		Name:       "exit_points",
		Columns:    ExitPointsColumns,
		PrimaryKey: []*schema.Column{ExitPointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "exit_points_blocks_exit_points",
				Columns: []*schema.Column{ExitPointsColumns[6]},

				RefColumns: []*schema.Column{BlocksColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exitpoint_cid_block_exit_points",
				Unique:  true,
				Columns: []*schema.Column{ExitPointsColumns[4], ExitPointsColumns[6]},
			},
		},
	}
	// ExportTasksColumns holds the columns for the "export_tasks" table.
	ExportTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"EQUIPMENT", "LOCATION", "PORT", "LINK", "SERVICE", "WORK_ORDER", "SINGLE_WORK_ORDER", "PROJECT"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PENDING", "IN_PROGRESS", "SUCCEEDED", "FAILED"}},
		{Name: "progress", Type: field.TypeFloat64},
		{Name: "filters", Type: field.TypeString, Size: 2147483647, Default: "[]"},
		{Name: "store_key", Type: field.TypeString, Nullable: true},
		{Name: "wo_id_to_export", Type: field.TypeInt, Nullable: true},
	}
	// ExportTasksTable holds the schema information for the "export_tasks" table.
	ExportTasksTable = &schema.Table{
		Name:        "export_tasks",
		Columns:     ExportTasksColumns,
		PrimaryKey:  []*schema.Column{ExportTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FeaturesColumns holds the columns for the "features" table.
	FeaturesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "global", Type: field.TypeBool, Default: true},
		{Name: "enabled", Type: field.TypeBool},
		{Name: "description", Type: field.TypeString, Nullable: true},
	}
	// FeaturesTable holds the schema information for the "features" table.
	FeaturesTable = &schema.Table{
		Name:        "features",
		Columns:     FeaturesColumns,
		PrimaryKey:  []*schema.Column{FeaturesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FilesColumns holds the columns for the "files" table.
	FilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"IMAGE", "FILE"}},
		{Name: "name", Type: field.TypeString},
		{Name: "size", Type: field.TypeInt, Nullable: true},
		{Name: "modified_at", Type: field.TypeTime, Nullable: true},
		{Name: "uploaded_at", Type: field.TypeTime, Nullable: true},
		{Name: "content_type", Type: field.TypeString},
		{Name: "store_key", Type: field.TypeString},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "annotation", Type: field.TypeString, Nullable: true},
		{Name: "check_list_item_files", Type: field.TypeInt, Nullable: true},
		{Name: "document_category_files", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_files", Type: field.TypeInt, Nullable: true},
		{Name: "floor_plan_image", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "location_files", Type: field.TypeInt, Nullable: true},
		{Name: "survey_source_file", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "survey_question_photo_data", Type: field.TypeInt, Nullable: true},
		{Name: "survey_question_images", Type: field.TypeInt, Nullable: true},
		{Name: "user_profile_photo", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "work_order_files", Type: field.TypeInt, Nullable: true},
	}
	// FilesTable holds the schema information for the "files" table.
	FilesTable = &schema.Table{
		Name:       "files",
		Columns:    FilesColumns,
		PrimaryKey: []*schema.Column{FilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "files_check_list_items_files",
				Columns: []*schema.Column{FilesColumns[12]},

				RefColumns: []*schema.Column{CheckListItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_document_categories_files",
				Columns: []*schema.Column{FilesColumns[13]},

				RefColumns: []*schema.Column{DocumentCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_equipment_files",
				Columns: []*schema.Column{FilesColumns[14]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_floor_plans_image",
				Columns: []*schema.Column{FilesColumns[15]},

				RefColumns: []*schema.Column{FloorPlansColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_locations_files",
				Columns: []*schema.Column{FilesColumns[16]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_surveys_source_file",
				Columns: []*schema.Column{FilesColumns[17]},

				RefColumns: []*schema.Column{SurveysColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_survey_questions_photo_data",
				Columns: []*schema.Column{FilesColumns[18]},

				RefColumns: []*schema.Column{SurveyQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_survey_questions_images",
				Columns: []*schema.Column{FilesColumns[19]},

				RefColumns: []*schema.Column{SurveyQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_users_profile_photo",
				Columns: []*schema.Column{FilesColumns[20]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "files_work_orders_files",
				Columns: []*schema.Column{FilesColumns[21]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FloorPlansColumns holds the columns for the "floor_plans" table.
	FloorPlansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "floor_plan_location", Type: field.TypeInt, Nullable: true},
		{Name: "floor_plan_reference_point", Type: field.TypeInt, Nullable: true},
		{Name: "floor_plan_scale", Type: field.TypeInt, Nullable: true},
	}
	// FloorPlansTable holds the schema information for the "floor_plans" table.
	FloorPlansTable = &schema.Table{
		Name:       "floor_plans",
		Columns:    FloorPlansColumns,
		PrimaryKey: []*schema.Column{FloorPlansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "floor_plans_locations_location",
				Columns: []*schema.Column{FloorPlansColumns[4]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "floor_plans_floor_plan_reference_points_reference_point",
				Columns: []*schema.Column{FloorPlansColumns[5]},

				RefColumns: []*schema.Column{FloorPlanReferencePointsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "floor_plans_floor_plan_scales_scale",
				Columns: []*schema.Column{FloorPlansColumns[6]},

				RefColumns: []*schema.Column{FloorPlanScalesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FloorPlanReferencePointsColumns holds the columns for the "floor_plan_reference_points" table.
	FloorPlanReferencePointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "x", Type: field.TypeInt},
		{Name: "y", Type: field.TypeInt},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "longitude", Type: field.TypeFloat64},
	}
	// FloorPlanReferencePointsTable holds the schema information for the "floor_plan_reference_points" table.
	FloorPlanReferencePointsTable = &schema.Table{
		Name:        "floor_plan_reference_points",
		Columns:     FloorPlanReferencePointsColumns,
		PrimaryKey:  []*schema.Column{FloorPlanReferencePointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FloorPlanScalesColumns holds the columns for the "floor_plan_scales" table.
	FloorPlanScalesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "reference_point1_x", Type: field.TypeInt},
		{Name: "reference_point1_y", Type: field.TypeInt},
		{Name: "reference_point2_x", Type: field.TypeInt},
		{Name: "reference_point2_y", Type: field.TypeInt},
		{Name: "scale_in_meters", Type: field.TypeFloat64},
	}
	// FloorPlanScalesTable holds the schema information for the "floor_plan_scales" table.
	FloorPlanScalesTable = &schema.Table{
		Name:        "floor_plan_scales",
		Columns:     FloorPlanScalesColumns,
		PrimaryKey:  []*schema.Column{FloorPlanScalesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FlowsColumns holds the columns for the "flows" table.
	FlowsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "end_param_definitions", Type: field.TypeJSON, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PUBLISHED", "UNPUBLISHED", "ARCHIVED"}, Default: "UNPUBLISHED"},
		{Name: "new_instances_policy", Type: field.TypeEnum, Enums: []string{"ENABLED", "DISABLED"}, Default: "DISABLED"},
	}
	// FlowsTable holds the schema information for the "flows" table.
	FlowsTable = &schema.Table{
		Name:        "flows",
		Columns:     FlowsColumns,
		PrimaryKey:  []*schema.Column{FlowsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "flow_name",
				Unique:  true,
				Columns: []*schema.Column{FlowsColumns[3]},
			},
		},
	}
	// FlowDraftsColumns holds the columns for the "flow_drafts" table.
	FlowDraftsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "end_param_definitions", Type: field.TypeJSON, Nullable: true},
		{Name: "same_as_flow", Type: field.TypeBool, Default: true},
		{Name: "flow_draft", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// FlowDraftsTable holds the schema information for the "flow_drafts" table.
	FlowDraftsTable = &schema.Table{
		Name:       "flow_drafts",
		Columns:    FlowDraftsColumns,
		PrimaryKey: []*schema.Column{FlowDraftsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "flow_drafts_flows_draft",
				Columns: []*schema.Column{FlowDraftsColumns[7]},

				RefColumns: []*schema.Column{FlowsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FlowExecutionTemplatesColumns holds the columns for the "flow_execution_templates" table.
	FlowExecutionTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "end_param_definitions", Type: field.TypeJSON, Nullable: true},
	}
	// FlowExecutionTemplatesTable holds the schema information for the "flow_execution_templates" table.
	FlowExecutionTemplatesTable = &schema.Table{
		Name:        "flow_execution_templates",
		Columns:     FlowExecutionTemplatesColumns,
		PrimaryKey:  []*schema.Column{FlowExecutionTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// FlowInstancesColumns holds the columns for the "flow_instances" table.
	FlowInstancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"IN_PROGRESS", "FAILED", "COMPLETED", "CANCELED"}, Default: "IN_PROGRESS"},
		{Name: "output_params", Type: field.TypeJSON, Nullable: true},
		{Name: "incompletion_reason", Type: field.TypeString, Nullable: true},
		{Name: "bss_code", Type: field.TypeString},
		{Name: "service_instance_code", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "block_instance_subflow_instance", Type: field.TypeInt, Unique: true, Nullable: true},
		{Name: "flow_instance_flow", Type: field.TypeInt, Nullable: true},
		{Name: "flow_instance_template", Type: field.TypeInt, Nullable: true},
	}
	// FlowInstancesTable holds the schema information for the "flow_instances" table.
	FlowInstancesTable = &schema.Table{
		Name:       "flow_instances",
		Columns:    FlowInstancesColumns,
		PrimaryKey: []*schema.Column{FlowInstancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "flow_instances_block_instances_subflow_instance",
				Columns: []*schema.Column{FlowInstancesColumns[10]},

				RefColumns: []*schema.Column{BlockInstancesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "flow_instances_flows_flow",
				Columns: []*schema.Column{FlowInstancesColumns[11]},

				RefColumns: []*schema.Column{FlowsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "flow_instances_flow_execution_templates_template",
				Columns: []*schema.Column{FlowInstancesColumns[12]},

				RefColumns: []*schema.Column{FlowExecutionTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FormulasColumns holds the columns for the "formulas" table.
	FormulasColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "text_formula", Type: field.TypeString, Unique: true},
		{Name: "status", Type: field.TypeBool},
		{Name: "kpi_formulakpi", Type: field.TypeInt, Nullable: true},
		{Name: "network_type_formula_network_type_fk", Type: field.TypeInt, Nullable: true},
		{Name: "tech_formulatech", Type: field.TypeInt, Nullable: true},
	}
	// FormulasTable holds the schema information for the "formulas" table.
	FormulasTable = &schema.Table{
		Name:       "formulas",
		Columns:    FormulasColumns,
		PrimaryKey: []*schema.Column{FormulasColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "formulas_kpis_formulakpi",
				Columns: []*schema.Column{FormulasColumns[5]},

				RefColumns: []*schema.Column{KpisColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "formulas_network_types_formulaNetworkType_FK",
				Columns: []*schema.Column{FormulasColumns[6]},

				RefColumns: []*schema.Column{NetworkTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "formulas_teches_formulatech",
				Columns: []*schema.Column{FormulasColumns[7]},

				RefColumns: []*schema.Column{TechesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// HyperlinksColumns holds the columns for the "hyperlinks" table.
	HyperlinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "url", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "document_category_hyperlinks", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_hyperlinks", Type: field.TypeInt, Nullable: true},
		{Name: "location_hyperlinks", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_hyperlinks", Type: field.TypeInt, Nullable: true},
	}
	// HyperlinksTable holds the schema information for the "hyperlinks" table.
	HyperlinksTable = &schema.Table{
		Name:       "hyperlinks",
		Columns:    HyperlinksColumns,
		PrimaryKey: []*schema.Column{HyperlinksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "hyperlinks_document_categories_hyperlinks",
				Columns: []*schema.Column{HyperlinksColumns[6]},

				RefColumns: []*schema.Column{DocumentCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "hyperlinks_equipment_hyperlinks",
				Columns: []*schema.Column{HyperlinksColumns[7]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "hyperlinks_locations_hyperlinks",
				Columns: []*schema.Column{HyperlinksColumns[8]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "hyperlinks_work_orders_hyperlinks",
				Columns: []*schema.Column{HyperlinksColumns[9]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KpisColumns holds the columns for the "kpis" table.
	KpisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeBool},
		{Name: "domain_kpidomain", Type: field.TypeInt, Nullable: true},
		{Name: "kpi_category_kpicategory", Type: field.TypeInt, Nullable: true},
	}
	// KpisTable holds the schema information for the "kpis" table.
	KpisTable = &schema.Table{
		Name:       "kpis",
		Columns:    KpisColumns,
		PrimaryKey: []*schema.Column{KpisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "kpis_domains_kpidomain",
				Columns: []*schema.Column{KpisColumns[6]},

				RefColumns: []*schema.Column{DomainsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "kpis_kpi_categories_kpicategory",
				Columns: []*schema.Column{KpisColumns[7]},

				RefColumns: []*schema.Column{KpiCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KpiCategoriesColumns holds the columns for the "kpi_categories" table.
	KpiCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// KpiCategoriesTable holds the schema information for the "kpi_categories" table.
	KpiCategoriesTable = &schema.Table{
		Name:        "kpi_categories",
		Columns:     KpiCategoriesColumns,
		PrimaryKey:  []*schema.Column{KpiCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// KqisColumns holds the columns for the "kqis" table.
	KqisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "start_date_time", Type: field.TypeTime},
		{Name: "end_date_time", Type: field.TypeTime},
		{Name: "formula", Type: field.TypeString},
		{Name: "kqi_category_kqi_category_fk", Type: field.TypeInt, Nullable: true},
		{Name: "kqi_perspective_kqi_perspective_fk", Type: field.TypeInt, Nullable: true},
		{Name: "kqi_source_kqi_source_fk", Type: field.TypeInt, Nullable: true},
		{Name: "kqi_temporal_frequency_kqi_temporal_frequency_fk", Type: field.TypeInt, Nullable: true},
	}
	// KqisTable holds the schema information for the "kqis" table.
	KqisTable = &schema.Table{
		Name:       "kqis",
		Columns:    KqisColumns,
		PrimaryKey: []*schema.Column{KqisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "kqis_kqi_categories_kqiCategoryFk",
				Columns: []*schema.Column{KqisColumns[8]},

				RefColumns: []*schema.Column{KqiCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "kqis_kqi_perspectives_kqiPerspectiveFk",
				Columns: []*schema.Column{KqisColumns[9]},

				RefColumns: []*schema.Column{KqiPerspectivesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "kqis_kqi_sources_kqiSourceFk",
				Columns: []*schema.Column{KqisColumns[10]},

				RefColumns: []*schema.Column{KqiSourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "kqis_kqi_temporal_frequencies_kqiTemporalFrequencyFk",
				Columns: []*schema.Column{KqisColumns[11]},

				RefColumns: []*schema.Column{KqiTemporalFrequenciesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KqiCategoriesColumns holds the columns for the "kqi_categories" table.
	KqiCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// KqiCategoriesTable holds the schema information for the "kqi_categories" table.
	KqiCategoriesTable = &schema.Table{
		Name:        "kqi_categories",
		Columns:     KqiCategoriesColumns,
		PrimaryKey:  []*schema.Column{KqiCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// KqiComparatorsColumns holds the columns for the "kqi_comparators" table.
	KqiComparatorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "number", Type: field.TypeFloat64},
		{Name: "comparator_type", Type: field.TypeString},
		{Name: "comparator_comparatorkqitargetfk", Type: field.TypeInt, Nullable: true},
		{Name: "kqi_target_kqitargetcomparatorfk", Type: field.TypeInt, Nullable: true},
	}
	// KqiComparatorsTable holds the schema information for the "kqi_comparators" table.
	KqiComparatorsTable = &schema.Table{
		Name:       "kqi_comparators",
		Columns:    KqiComparatorsColumns,
		PrimaryKey: []*schema.Column{KqiComparatorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "kqi_comparators_comparators_comparatorkqitargetfk",
				Columns: []*schema.Column{KqiComparatorsColumns[5]},

				RefColumns: []*schema.Column{ComparatorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "kqi_comparators_kqi_targets_kqitargetcomparatorfk",
				Columns: []*schema.Column{KqiComparatorsColumns[6]},

				RefColumns: []*schema.Column{KqiTargetsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KqiPerspectivesColumns holds the columns for the "kqi_perspectives" table.
	KqiPerspectivesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// KqiPerspectivesTable holds the schema information for the "kqi_perspectives" table.
	KqiPerspectivesTable = &schema.Table{
		Name:        "kqi_perspectives",
		Columns:     KqiPerspectivesColumns,
		PrimaryKey:  []*schema.Column{KqiPerspectivesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// KqiSourcesColumns holds the columns for the "kqi_sources" table.
	KqiSourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// KqiSourcesTable holds the schema information for the "kqi_sources" table.
	KqiSourcesTable = &schema.Table{
		Name:        "kqi_sources",
		Columns:     KqiSourcesColumns,
		PrimaryKey:  []*schema.Column{KqiSourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// KqiTargetsColumns holds the columns for the "kqi_targets" table.
	KqiTargetsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "period", Type: field.TypeFloat64},
		{Name: "allowed_variation", Type: field.TypeFloat64},
		{Name: "init_time", Type: field.TypeTime},
		{Name: "end_time", Type: field.TypeTime},
		{Name: "impact", Type: field.TypeString},
		{Name: "status", Type: field.TypeBool},
		{Name: "kqi_kqi_target_fk", Type: field.TypeInt, Nullable: true},
	}
	// KqiTargetsTable holds the schema information for the "kqi_targets" table.
	KqiTargetsTable = &schema.Table{
		Name:       "kqi_targets",
		Columns:    KqiTargetsColumns,
		PrimaryKey: []*schema.Column{KqiTargetsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "kqi_targets_kqis_kqiTargetFk",
				Columns: []*schema.Column{KqiTargetsColumns[10]},

				RefColumns: []*schema.Column{KqisColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// KqiTemporalFrequenciesColumns holds the columns for the "kqi_temporal_frequencies" table.
	KqiTemporalFrequenciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// KqiTemporalFrequenciesTable holds the schema information for the "kqi_temporal_frequencies" table.
	KqiTemporalFrequenciesTable = &schema.Table{
		Name:        "kqi_temporal_frequencies",
		Columns:     KqiTemporalFrequenciesColumns,
		PrimaryKey:  []*schema.Column{KqiTemporalFrequenciesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LinksColumns holds the columns for the "links" table.
	LinksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "future_state", Type: field.TypeEnum, Nullable: true, Enums: []string{"INSTALL", "REMOVE"}},
		{Name: "link_work_order", Type: field.TypeInt, Nullable: true},
	}
	// LinksTable holds the schema information for the "links" table.
	LinksTable = &schema.Table{
		Name:       "links",
		Columns:    LinksColumns,
		PrimaryKey: []*schema.Column{LinksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "links_work_orders_work_order",
				Columns: []*schema.Column{LinksColumns[4]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "longitude", Type: field.TypeFloat64},
		{Name: "site_survey_needed", Type: field.TypeBool, Nullable: true},
		{Name: "location_type", Type: field.TypeInt, Nullable: true},
		{Name: "location_children", Type: field.TypeInt, Nullable: true},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:       "locations",
		Columns:    LocationsColumns,
		PrimaryKey: []*schema.Column{LocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "locations_location_types_type",
				Columns: []*schema.Column{LocationsColumns[8]},

				RefColumns: []*schema.Column{LocationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "locations_locations_children",
				Columns: []*schema.Column{LocationsColumns[9]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "location_name_location_type_location_children",
				Unique:  true,
				Columns: []*schema.Column{LocationsColumns[3], LocationsColumns[8], LocationsColumns[9]},
			},
		},
	}
	// LocationTypesColumns holds the columns for the "location_types" table.
	LocationTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "site", Type: field.TypeBool},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "map_type", Type: field.TypeString, Nullable: true},
		{Name: "map_zoom_level", Type: field.TypeInt, Nullable: true, Default: 7},
		{Name: "index", Type: field.TypeInt},
	}
	// LocationTypesTable holds the schema information for the "location_types" table.
	LocationTypesTable = &schema.Table{
		Name:        "location_types",
		Columns:     LocationTypesColumns,
		PrimaryKey:  []*schema.Column{LocationTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// NetworkTypesColumns holds the columns for the "network_types" table.
	NetworkTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// NetworkTypesTable holds the schema information for the "network_types" table.
	NetworkTypesTable = &schema.Table{
		Name:        "network_types",
		Columns:     NetworkTypesColumns,
		PrimaryKey:  []*schema.Column{NetworkTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// OrganizationsColumns holds the columns for the "organizations" table.
	OrganizationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
	}
	// OrganizationsTable holds the schema information for the "organizations" table.
	OrganizationsTable = &schema.Table{
		Name:        "organizations",
		Columns:     OrganizationsColumns,
		PrimaryKey:  []*schema.Column{OrganizationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ParameterCatalogsColumns holds the columns for the "parameter_catalogs" table.
	ParameterCatalogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "index", Type: field.TypeInt},
		{Name: "disabled", Type: field.TypeBool},
	}
	// ParameterCatalogsTable holds the schema information for the "parameter_catalogs" table.
	ParameterCatalogsTable = &schema.Table{
		Name:        "parameter_catalogs",
		Columns:     ParameterCatalogsColumns,
		PrimaryKey:  []*schema.Column{ParameterCatalogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// PermissionsPoliciesColumns holds the columns for the "permissions_policies" table.
	PermissionsPoliciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_global", Type: field.TypeBool, Nullable: true},
		{Name: "inventory_policy", Type: field.TypeJSON, Nullable: true},
		{Name: "workforce_policy", Type: field.TypeJSON, Nullable: true},
		{Name: "automation_policy", Type: field.TypeJSON, Nullable: true},
		{Name: "assurance_policy", Type: field.TypeJSON, Nullable: true},
	}
	// PermissionsPoliciesTable holds the schema information for the "permissions_policies" table.
	PermissionsPoliciesTable = &schema.Table{
		Name:        "permissions_policies",
		Columns:     PermissionsPoliciesColumns,
		PrimaryKey:  []*schema.Column{PermissionsPoliciesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ProjectsColumns holds the columns for the "projects" table.
	ProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "priority", Type: field.TypeEnum, Enums: []string{"URGENT", "HIGH", "MEDIUM", "LOW", "NONE"}, Default: "NONE"},
		{Name: "project_template", Type: field.TypeInt, Nullable: true},
		{Name: "project_location", Type: field.TypeInt, Nullable: true},
		{Name: "project_creator", Type: field.TypeInt, Nullable: true},
		{Name: "project_type_projects", Type: field.TypeInt, Nullable: true},
	}
	// ProjectsTable holds the schema information for the "projects" table.
	ProjectsTable = &schema.Table{
		Name:       "projects",
		Columns:    ProjectsColumns,
		PrimaryKey: []*schema.Column{ProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "projects_project_templates_template",
				Columns: []*schema.Column{ProjectsColumns[6]},

				RefColumns: []*schema.Column{ProjectTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "projects_locations_location",
				Columns: []*schema.Column{ProjectsColumns[7]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "projects_users_creator",
				Columns: []*schema.Column{ProjectsColumns[8]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "projects_project_types_projects",
				Columns: []*schema.Column{ProjectsColumns[9]},

				RefColumns: []*schema.Column{ProjectTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "project_name_project_type_projects",
				Unique:  true,
				Columns: []*schema.Column{ProjectsColumns[3], ProjectsColumns[9]},
			},
			{
				Name:    "project_create_time",
				Unique:  false,
				Columns: []*schema.Column{ProjectsColumns[1]},
			},
			{
				Name:    "project_update_time",
				Unique:  false,
				Columns: []*schema.Column{ProjectsColumns[2]},
			},
		},
	}
	// ProjectTemplatesColumns holds the columns for the "project_templates" table.
	ProjectTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "project_template_type", Type: field.TypeInt, Nullable: true},
	}
	// ProjectTemplatesTable holds the schema information for the "project_templates" table.
	ProjectTemplatesTable = &schema.Table{
		Name:       "project_templates",
		Columns:    ProjectTemplatesColumns,
		PrimaryKey: []*schema.Column{ProjectTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "project_templates_project_types_type",
				Columns: []*schema.Column{ProjectTemplatesColumns[5]},

				RefColumns: []*schema.Column{ProjectTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProjectTypesColumns holds the columns for the "project_types" table.
	ProjectTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// ProjectTypesTable holds the schema information for the "project_types" table.
	ProjectTypesTable = &schema.Table{
		Name:        "project_types",
		Columns:     ProjectTypesColumns,
		PrimaryKey:  []*schema.Column{ProjectTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "projecttype_name",
				Unique:  true,
				Columns: []*schema.Column{ProjectTypesColumns[3]},
			},
		},
	}
	// PropertiesColumns holds the columns for the "properties" table.
	PropertiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "int_val", Type: field.TypeInt, Nullable: true},
		{Name: "bool_val", Type: field.TypeBool, Nullable: true},
		{Name: "float_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "latitude_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "range_from_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "range_to_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "string_val", Type: field.TypeString, Nullable: true},
		{Name: "equipment_properties", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_port_properties", Type: field.TypeInt, Nullable: true},
		{Name: "link_properties", Type: field.TypeInt, Nullable: true},
		{Name: "location_properties", Type: field.TypeInt, Nullable: true},
		{Name: "project_properties", Type: field.TypeInt, Nullable: true},
		{Name: "property_type", Type: field.TypeInt, Nullable: true},
		{Name: "property_equipment_value", Type: field.TypeInt, Nullable: true},
		{Name: "property_location_value", Type: field.TypeInt, Nullable: true},
		{Name: "property_service_value", Type: field.TypeInt, Nullable: true},
		{Name: "property_work_order_value", Type: field.TypeInt, Nullable: true},
		{Name: "property_user_value", Type: field.TypeInt, Nullable: true},
		{Name: "property_project_value", Type: field.TypeInt, Nullable: true},
		{Name: "service_properties", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_properties", Type: field.TypeInt, Nullable: true},
	}
	// PropertiesTable holds the schema information for the "properties" table.
	PropertiesTable = &schema.Table{
		Name:       "properties",
		Columns:    PropertiesColumns,
		PrimaryKey: []*schema.Column{PropertiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "properties_equipment_properties",
				Columns: []*schema.Column{PropertiesColumns[11]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_equipment_ports_properties",
				Columns: []*schema.Column{PropertiesColumns[12]},

				RefColumns: []*schema.Column{EquipmentPortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_links_properties",
				Columns: []*schema.Column{PropertiesColumns[13]},

				RefColumns: []*schema.Column{LinksColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_locations_properties",
				Columns: []*schema.Column{PropertiesColumns[14]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_projects_properties",
				Columns: []*schema.Column{PropertiesColumns[15]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_property_types_type",
				Columns: []*schema.Column{PropertiesColumns[16]},

				RefColumns: []*schema.Column{PropertyTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_equipment_equipment_value",
				Columns: []*schema.Column{PropertiesColumns[17]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_locations_location_value",
				Columns: []*schema.Column{PropertiesColumns[18]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_services_service_value",
				Columns: []*schema.Column{PropertiesColumns[19]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_work_orders_work_order_value",
				Columns: []*schema.Column{PropertiesColumns[20]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_users_user_value",
				Columns: []*schema.Column{PropertiesColumns[21]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_projects_project_value",
				Columns: []*schema.Column{PropertiesColumns[22]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_services_properties",
				Columns: []*schema.Column{PropertiesColumns[23]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "properties_work_orders_properties",
				Columns: []*schema.Column{PropertiesColumns[24]},

				RefColumns: []*schema.Column{WorkOrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "property_property_type_location_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[14]},
			},
			{
				Name:    "property_property_type_equipment_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[11]},
			},
			{
				Name:    "property_property_type_service_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[23]},
			},
			{
				Name:    "property_property_type_equipment_port_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[12]},
			},
			{
				Name:    "property_property_type_link_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[13]},
			},
			{
				Name:    "property_property_type_work_order_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[24]},
			},
			{
				Name:    "property_property_type_project_properties",
				Unique:  true,
				Columns: []*schema.Column{PropertiesColumns[16], PropertiesColumns[15]},
			},
		},
	}
	// PropertyCategoriesColumns holds the columns for the "property_categories" table.
	PropertyCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "index", Type: field.TypeInt},
		{Name: "parameter_catalog_property_categories", Type: field.TypeInt, Nullable: true},
	}
	// PropertyCategoriesTable holds the schema information for the "property_categories" table.
	PropertyCategoriesTable = &schema.Table{
		Name:       "property_categories",
		Columns:    PropertyCategoriesColumns,
		PrimaryKey: []*schema.Column{PropertyCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "property_categories_parameter_catalogs_property_categories",
				Columns: []*schema.Column{PropertyCategoriesColumns[5]},

				RefColumns: []*schema.Column{ParameterCatalogsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "propertycategory_name",
				Unique:  false,
				Columns: []*schema.Column{PropertyCategoriesColumns[3]},
			},
		},
	}
	// PropertyTypesColumns holds the columns for the "property_types" table.
	PropertyTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"string", "int", "bool", "float", "date", "enum", "range", "email", "gps_location", "datetime_local", "node"}},
		{Name: "name", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "category", Type: field.TypeString, Nullable: true},
		{Name: "int_val", Type: field.TypeInt, Nullable: true},
		{Name: "bool_val", Type: field.TypeBool, Nullable: true},
		{Name: "float_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "latitude_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "string_val", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "range_from_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "range_to_val", Type: field.TypeFloat64, Nullable: true},
		{Name: "is_instance_property", Type: field.TypeBool, Default: true},
		{Name: "editable", Type: field.TypeBool, Default: true},
		{Name: "mandatory", Type: field.TypeBool},
		{Name: "deleted", Type: field.TypeBool},
		{Name: "listable", Type: field.TypeBool},
		{Name: "node_type", Type: field.TypeString, Nullable: true},
		{Name: "equipment_port_type_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_port_type_link_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "equipment_type_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "location_type_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "project_template_properties", Type: field.TypeInt, Nullable: true},
		{Name: "project_type_properties", Type: field.TypeInt, Nullable: true},
		{Name: "property_category_properties_type", Type: field.TypeInt, Nullable: true},
		{Name: "service_type_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_template_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_type_property_types", Type: field.TypeInt, Nullable: true},
		{Name: "worker_type_property_types", Type: field.TypeInt, Nullable: true},
	}
	// PropertyTypesTable holds the schema information for the "property_types" table.
	PropertyTypesTable = &schema.Table{
		Name:       "property_types",
		Columns:    PropertyTypesColumns,
		PrimaryKey: []*schema.Column{PropertyTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "property_types_equipment_port_types_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[22]},

				RefColumns: []*schema.Column{EquipmentPortTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_equipment_port_types_link_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[23]},

				RefColumns: []*schema.Column{EquipmentPortTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_equipment_types_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[24]},

				RefColumns: []*schema.Column{EquipmentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_location_types_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[25]},

				RefColumns: []*schema.Column{LocationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_project_templates_properties",
				Columns: []*schema.Column{PropertyTypesColumns[26]},

				RefColumns: []*schema.Column{ProjectTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_project_types_properties",
				Columns: []*schema.Column{PropertyTypesColumns[27]},

				RefColumns: []*schema.Column{ProjectTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_property_categories_properties_type",
				Columns: []*schema.Column{PropertyTypesColumns[28]},

				RefColumns: []*schema.Column{PropertyCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_service_types_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[29]},

				RefColumns: []*schema.Column{ServiceTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_work_order_templates_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[30]},

				RefColumns: []*schema.Column{WorkOrderTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_work_order_types_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[31]},

				RefColumns: []*schema.Column{WorkOrderTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "property_types_worker_types_property_types",
				Columns: []*schema.Column{PropertyTypesColumns[32]},

				RefColumns: []*schema.Column{WorkerTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "propertytype_name_location_type_property_types",
				Unique:  true,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[25]},
			},
			{
				Name:    "propertytype_name_equipment_port_type_property_types",
				Unique:  true,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[22]},
			},
			{
				Name:    "propertytype_name_equipment_type_property_types",
				Unique:  true,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[24]},
			},
			{
				Name:    "propertytype_name_equipment_port_type_link_property_types",
				Unique:  true,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[23]},
			},
			{
				Name:    "propertytype_name_work_order_type_property_types",
				Unique:  true,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[31]},
			},
			{
				Name:    "propertytype_name_worker_type_property_types",
				Unique:  true,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[32]},
			},
			{
				Name:    "propertytype_name_property_category_properties_type",
				Unique:  false,
				Columns: []*schema.Column{PropertyTypesColumns[4], PropertyTypesColumns[28]},
			},
		},
	}
	// RecommendationsColumns holds the columns for the "recommendations" table.
	RecommendationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "external_id", Type: field.TypeString},
		{Name: "resource", Type: field.TypeString},
		{Name: "alarm_type", Type: field.TypeString},
		{Name: "short_description", Type: field.TypeString},
		{Name: "long_description", Type: field.TypeString},
		{Name: "command", Type: field.TypeString, Nullable: true},
		{Name: "priority", Type: field.TypeInt},
		{Name: "status", Type: field.TypeBool},
		{Name: "used", Type: field.TypeInt, Nullable: true},
		{Name: "runbook", Type: field.TypeString, Nullable: true},
		{Name: "recommendations_category_recommendations", Type: field.TypeInt, Nullable: true},
		{Name: "recommendations_sources_recommendations", Type: field.TypeInt, Nullable: true},
		{Name: "user_user_create", Type: field.TypeInt, Nullable: true},
		{Name: "user_user_approved", Type: field.TypeInt, Nullable: true},
		{Name: "vendor_vendors_recomendations", Type: field.TypeInt, Nullable: true},
	}
	// RecommendationsTable holds the schema information for the "recommendations" table.
	RecommendationsTable = &schema.Table{
		Name:       "recommendations",
		Columns:    RecommendationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "recommendations_recommendations_categories_recommendations",
				Columns: []*schema.Column{RecommendationsColumns[13]},

				RefColumns: []*schema.Column{RecommendationsCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "recommendations_recommendations_sources_recommendations",
				Columns: []*schema.Column{RecommendationsColumns[14]},

				RefColumns: []*schema.Column{RecommendationsSourcesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "recommendations_users_User_create",
				Columns: []*schema.Column{RecommendationsColumns[15]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "recommendations_users_User_approved",
				Columns: []*schema.Column{RecommendationsColumns[16]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "recommendations_vendors_vendors_recomendations",
				Columns: []*schema.Column{RecommendationsColumns[17]},

				RefColumns: []*schema.Column{VendorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecommendationsCategoriesColumns holds the columns for the "recommendations_categories" table.
	RecommendationsCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// RecommendationsCategoriesTable holds the schema information for the "recommendations_categories" table.
	RecommendationsCategoriesTable = &schema.Table{
		Name:        "recommendations_categories",
		Columns:     RecommendationsCategoriesColumns,
		PrimaryKey:  []*schema.Column{RecommendationsCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// RecommendationsSourcesColumns holds the columns for the "recommendations_sources" table.
	RecommendationsSourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// RecommendationsSourcesTable holds the schema information for the "recommendations_sources" table.
	RecommendationsSourcesTable = &schema.Table{
		Name:        "recommendations_sources",
		Columns:     RecommendationsSourcesColumns,
		PrimaryKey:  []*schema.Column{RecommendationsSourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ReportFiltersColumns holds the columns for the "report_filters" table.
	ReportFiltersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "entity", Type: field.TypeEnum, Enums: []string{"WORK_ORDER", "PORT", "EQUIPMENT", "LINK", "LOCATION", "SERVICE"}},
		{Name: "filters", Type: field.TypeString, Size: 2147483647, Default: "[]"},
	}
	// ReportFiltersTable holds the schema information for the "report_filters" table.
	ReportFiltersTable = &schema.Table{
		Name:        "report_filters",
		Columns:     ReportFiltersColumns,
		PrimaryKey:  []*schema.Column{ReportFiltersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "reportfilter_name_entity",
				Unique:  true,
				Columns: []*schema.Column{ReportFiltersColumns[3], ReportFiltersColumns[4]},
			},
		},
	}
	// RulesColumns holds the columns for the "rules" table.
	RulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "grace_period", Type: field.TypeInt},
		{Name: "start_date_time", Type: field.TypeTime},
		{Name: "end_date_time", Type: field.TypeTime},
		{Name: "status", Type: field.TypeBool},
		{Name: "event_type_name", Type: field.TypeString, Nullable: true},
		{Name: "specific_problem", Type: field.TypeString, Nullable: true},
		{Name: "additional_info", Type: field.TypeString, Nullable: true},
		{Name: "event_severity_eventseverityrule", Type: field.TypeInt, Nullable: true},
		{Name: "rule_type_ruletyperule", Type: field.TypeInt, Nullable: true},
		{Name: "threshold_rulethreshold", Type: field.TypeInt, Nullable: true},
	}
	// RulesTable holds the schema information for the "rules" table.
	RulesTable = &schema.Table{
		Name:       "rules",
		Columns:    RulesColumns,
		PrimaryKey: []*schema.Column{RulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "rules_event_severities_eventseverityrule",
				Columns: []*schema.Column{RulesColumns[11]},

				RefColumns: []*schema.Column{EventSeveritiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rules_rule_types_ruletyperule",
				Columns: []*schema.Column{RulesColumns[12]},

				RefColumns: []*schema.Column{RuleTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rules_thresholds_rulethreshold",
				Columns: []*schema.Column{RulesColumns[13]},

				RefColumns: []*schema.Column{ThresholdsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RuleLimitsColumns holds the columns for the "rule_limits" table.
	RuleLimitsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "number", Type: field.TypeInt},
		{Name: "limit_type", Type: field.TypeString},
		{Name: "comparator_comparatorrulelimit", Type: field.TypeInt, Nullable: true},
		{Name: "rule_rulelimitrule", Type: field.TypeInt, Nullable: true},
	}
	// RuleLimitsTable holds the schema information for the "rule_limits" table.
	RuleLimitsTable = &schema.Table{
		Name:       "rule_limits",
		Columns:    RuleLimitsColumns,
		PrimaryKey: []*schema.Column{RuleLimitsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "rule_limits_comparators_comparatorrulelimit",
				Columns: []*schema.Column{RuleLimitsColumns[5]},

				RefColumns: []*schema.Column{ComparatorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "rule_limits_rules_rulelimitrule",
				Columns: []*schema.Column{RuleLimitsColumns[6]},

				RefColumns: []*schema.Column{RulesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RuleTypesColumns holds the columns for the "rule_types" table.
	RuleTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// RuleTypesTable holds the schema information for the "rule_types" table.
	RuleTypesTable = &schema.Table{
		Name:        "rule_types",
		Columns:     RuleTypesColumns,
		PrimaryKey:  []*schema.Column{RuleTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ServicesColumns holds the columns for the "services" table.
	ServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "external_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PENDING", "IN_SERVICE", "MAINTENANCE", "DISCONNECTED"}},
		{Name: "service_type", Type: field.TypeInt, Nullable: true},
	}
	// ServicesTable holds the schema information for the "services" table.
	ServicesTable = &schema.Table{
		Name:       "services",
		Columns:    ServicesColumns,
		PrimaryKey: []*schema.Column{ServicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "services_service_types_type",
				Columns: []*schema.Column{ServicesColumns[6]},

				RefColumns: []*schema.Column{ServiceTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ServiceEndpointsColumns holds the columns for the "service_endpoints" table.
	ServiceEndpointsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "service_endpoints", Type: field.TypeInt, Nullable: true},
		{Name: "service_endpoint_port", Type: field.TypeInt, Nullable: true},
		{Name: "service_endpoint_equipment", Type: field.TypeInt, Nullable: true},
		{Name: "service_endpoint_definition_endpoints", Type: field.TypeInt, Nullable: true},
	}
	// ServiceEndpointsTable holds the schema information for the "service_endpoints" table.
	ServiceEndpointsTable = &schema.Table{
		Name:       "service_endpoints",
		Columns:    ServiceEndpointsColumns,
		PrimaryKey: []*schema.Column{ServiceEndpointsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "service_endpoints_services_endpoints",
				Columns: []*schema.Column{ServiceEndpointsColumns[3]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "service_endpoints_equipment_ports_port",
				Columns: []*schema.Column{ServiceEndpointsColumns[4]},

				RefColumns: []*schema.Column{EquipmentPortsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "service_endpoints_equipment_equipment",
				Columns: []*schema.Column{ServiceEndpointsColumns[5]},

				RefColumns: []*schema.Column{EquipmentColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "service_endpoints_service_endpoint_definitions_endpoints",
				Columns: []*schema.Column{ServiceEndpointsColumns[6]},

				RefColumns: []*schema.Column{ServiceEndpointDefinitionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ServiceEndpointDefinitionsColumns holds the columns for the "service_endpoint_definitions" table.
	ServiceEndpointDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "role", Type: field.TypeString, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "equipment_type_service_endpoint_definitions", Type: field.TypeInt, Nullable: true},
		{Name: "service_type_endpoint_definitions", Type: field.TypeInt, Nullable: true},
	}
	// ServiceEndpointDefinitionsTable holds the schema information for the "service_endpoint_definitions" table.
	ServiceEndpointDefinitionsTable = &schema.Table{
		Name:       "service_endpoint_definitions",
		Columns:    ServiceEndpointDefinitionsColumns,
		PrimaryKey: []*schema.Column{ServiceEndpointDefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "service_endpoint_definitions_equipment_types_service_endpoint_definitions",
				Columns: []*schema.Column{ServiceEndpointDefinitionsColumns[6]},

				RefColumns: []*schema.Column{EquipmentTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "service_endpoint_definitions_service_types_endpoint_definitions",
				Columns: []*schema.Column{ServiceEndpointDefinitionsColumns[7]},

				RefColumns: []*schema.Column{ServiceTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "serviceendpointdefinition_index_service_type_endpoint_definitions",
				Unique:  true,
				Columns: []*schema.Column{ServiceEndpointDefinitionsColumns[5], ServiceEndpointDefinitionsColumns[7]},
			},
			{
				Name:    "serviceendpointdefinition_name_service_type_endpoint_definitions",
				Unique:  true,
				Columns: []*schema.Column{ServiceEndpointDefinitionsColumns[4], ServiceEndpointDefinitionsColumns[7]},
			},
		},
	}
	// ServiceTypesColumns holds the columns for the "service_types" table.
	ServiceTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "has_customer", Type: field.TypeBool},
		{Name: "is_deleted", Type: field.TypeBool},
		{Name: "discovery_method", Type: field.TypeEnum, Enums: []string{"MANUAL", "INVENTORY"}, Default: "MANUAL"},
	}
	// ServiceTypesTable holds the schema information for the "service_types" table.
	ServiceTypesTable = &schema.Table{
		Name:        "service_types",
		Columns:     ServiceTypesColumns,
		PrimaryKey:  []*schema.Column{ServiceTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// SurveysColumns holds the columns for the "surveys" table.
	SurveysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "owner_name", Type: field.TypeString, Nullable: true},
		{Name: "creation_timestamp", Type: field.TypeTime, Nullable: true},
		{Name: "completion_timestamp", Type: field.TypeTime},
		{Name: "survey_location", Type: field.TypeInt, Nullable: true},
	}
	// SurveysTable holds the schema information for the "surveys" table.
	SurveysTable = &schema.Table{
		Name:       "surveys",
		Columns:    SurveysColumns,
		PrimaryKey: []*schema.Column{SurveysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "surveys_locations_location",
				Columns: []*schema.Column{SurveysColumns[7]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyCellScansColumns holds the columns for the "survey_cell_scans" table.
	SurveyCellScansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "network_type", Type: field.TypeEnum, Enums: []string{"CDMA", "GSM", "LTE", "WCDMA"}},
		{Name: "signal_strength", Type: field.TypeInt},
		{Name: "timestamp", Type: field.TypeTime, Nullable: true},
		{Name: "base_station_id", Type: field.TypeString, Nullable: true},
		{Name: "network_id", Type: field.TypeString, Nullable: true},
		{Name: "system_id", Type: field.TypeString, Nullable: true},
		{Name: "cell_id", Type: field.TypeString, Nullable: true},
		{Name: "location_area_code", Type: field.TypeString, Nullable: true},
		{Name: "mobile_country_code", Type: field.TypeString, Nullable: true},
		{Name: "mobile_network_code", Type: field.TypeString, Nullable: true},
		{Name: "primary_scrambling_code", Type: field.TypeString, Nullable: true},
		{Name: "operator", Type: field.TypeString, Nullable: true},
		{Name: "arfcn", Type: field.TypeInt, Nullable: true},
		{Name: "physical_cell_id", Type: field.TypeString, Nullable: true},
		{Name: "tracking_area_code", Type: field.TypeString, Nullable: true},
		{Name: "timing_advance", Type: field.TypeInt, Nullable: true},
		{Name: "earfcn", Type: field.TypeInt, Nullable: true},
		{Name: "uarfcn", Type: field.TypeInt, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "altitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "heading", Type: field.TypeFloat64, Nullable: true},
		{Name: "rssi", Type: field.TypeFloat64, Nullable: true},
		{Name: "survey_cell_scan_checklist_item", Type: field.TypeInt, Nullable: true},
		{Name: "survey_cell_scan_survey_question", Type: field.TypeInt, Nullable: true},
		{Name: "survey_cell_scan_location", Type: field.TypeInt, Nullable: true},
	}
	// SurveyCellScansTable holds the schema information for the "survey_cell_scans" table.
	SurveyCellScansTable = &schema.Table{
		Name:       "survey_cell_scans",
		Columns:    SurveyCellScansColumns,
		PrimaryKey: []*schema.Column{SurveyCellScansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "survey_cell_scans_check_list_items_checklist_item",
				Columns: []*schema.Column{SurveyCellScansColumns[26]},

				RefColumns: []*schema.Column{CheckListItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "survey_cell_scans_survey_questions_survey_question",
				Columns: []*schema.Column{SurveyCellScansColumns[27]},

				RefColumns: []*schema.Column{SurveyQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "survey_cell_scans_locations_location",
				Columns: []*schema.Column{SurveyCellScansColumns[28]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyQuestionsColumns holds the columns for the "survey_questions" table.
	SurveyQuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "form_name", Type: field.TypeString, Nullable: true},
		{Name: "form_description", Type: field.TypeString, Nullable: true},
		{Name: "form_index", Type: field.TypeInt},
		{Name: "question_type", Type: field.TypeString, Nullable: true},
		{Name: "question_format", Type: field.TypeString, Nullable: true},
		{Name: "question_text", Type: field.TypeString, Nullable: true},
		{Name: "question_index", Type: field.TypeInt},
		{Name: "bool_data", Type: field.TypeBool, Nullable: true},
		{Name: "email_data", Type: field.TypeString, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "location_accuracy", Type: field.TypeFloat64, Nullable: true},
		{Name: "altitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "phone_data", Type: field.TypeString, Nullable: true},
		{Name: "text_data", Type: field.TypeString, Nullable: true},
		{Name: "float_data", Type: field.TypeFloat64, Nullable: true},
		{Name: "int_data", Type: field.TypeInt, Nullable: true},
		{Name: "date_data", Type: field.TypeTime, Nullable: true},
		{Name: "survey_question_survey", Type: field.TypeInt, Nullable: true},
	}
	// SurveyQuestionsTable holds the schema information for the "survey_questions" table.
	SurveyQuestionsTable = &schema.Table{
		Name:       "survey_questions",
		Columns:    SurveyQuestionsColumns,
		PrimaryKey: []*schema.Column{SurveyQuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "survey_questions_surveys_survey",
				Columns: []*schema.Column{SurveyQuestionsColumns[21]},

				RefColumns: []*schema.Column{SurveysColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyTemplateCategoriesColumns holds the columns for the "survey_template_categories" table.
	SurveyTemplateCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "category_title", Type: field.TypeString},
		{Name: "category_description", Type: field.TypeString},
		{Name: "location_type_survey_template_categories", Type: field.TypeInt, Nullable: true},
	}
	// SurveyTemplateCategoriesTable holds the schema information for the "survey_template_categories" table.
	SurveyTemplateCategoriesTable = &schema.Table{
		Name:       "survey_template_categories",
		Columns:    SurveyTemplateCategoriesColumns,
		PrimaryKey: []*schema.Column{SurveyTemplateCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "survey_template_categories_location_types_survey_template_categories",
				Columns: []*schema.Column{SurveyTemplateCategoriesColumns[5]},

				RefColumns: []*schema.Column{LocationTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SurveyTemplateQuestionsColumns holds the columns for the "survey_template_questions" table.
	SurveyTemplateQuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "question_title", Type: field.TypeString},
		{Name: "question_description", Type: field.TypeString},
		{Name: "question_type", Type: field.TypeString},
		{Name: "index", Type: field.TypeInt},
		{Name: "survey_template_category_survey_template_questions", Type: field.TypeInt, Nullable: true},
	}
	// SurveyTemplateQuestionsTable holds the schema information for the "survey_template_questions" table.
	SurveyTemplateQuestionsTable = &schema.Table{
		Name:       "survey_template_questions",
		Columns:    SurveyTemplateQuestionsColumns,
		PrimaryKey: []*schema.Column{SurveyTemplateQuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "survey_template_questions_survey_template_categories_survey_template_questions",
				Columns: []*schema.Column{SurveyTemplateQuestionsColumns[7]},

				RefColumns: []*schema.Column{SurveyTemplateCategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "surveytemplatequestion_index_survey_template_category_survey_template_questions",
				Unique:  true,
				Columns: []*schema.Column{SurveyTemplateQuestionsColumns[6], SurveyTemplateQuestionsColumns[7]},
			},
		},
	}
	// SurveyWiFiScansColumns holds the columns for the "survey_wi_fi_scans" table.
	SurveyWiFiScansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "ssid", Type: field.TypeString, Nullable: true},
		{Name: "bssid", Type: field.TypeString},
		{Name: "timestamp", Type: field.TypeTime},
		{Name: "frequency", Type: field.TypeInt},
		{Name: "channel", Type: field.TypeInt},
		{Name: "band", Type: field.TypeString, Nullable: true},
		{Name: "channel_width", Type: field.TypeInt, Nullable: true},
		{Name: "capabilities", Type: field.TypeString, Nullable: true},
		{Name: "strength", Type: field.TypeInt},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "altitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "heading", Type: field.TypeFloat64, Nullable: true},
		{Name: "rssi", Type: field.TypeFloat64, Nullable: true},
		{Name: "survey_wi_fi_scan_checklist_item", Type: field.TypeInt, Nullable: true},
		{Name: "survey_wi_fi_scan_survey_question", Type: field.TypeInt, Nullable: true},
		{Name: "survey_wi_fi_scan_location", Type: field.TypeInt, Nullable: true},
	}
	// SurveyWiFiScansTable holds the schema information for the "survey_wi_fi_scans" table.
	SurveyWiFiScansTable = &schema.Table{
		Name:       "survey_wi_fi_scans",
		Columns:    SurveyWiFiScansColumns,
		PrimaryKey: []*schema.Column{SurveyWiFiScansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "survey_wi_fi_scans_check_list_items_checklist_item",
				Columns: []*schema.Column{SurveyWiFiScansColumns[17]},

				RefColumns: []*schema.Column{CheckListItemsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "survey_wi_fi_scans_survey_questions_survey_question",
				Columns: []*schema.Column{SurveyWiFiScansColumns[18]},

				RefColumns: []*schema.Column{SurveyQuestionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "survey_wi_fi_scans_locations_location",
				Columns: []*schema.Column{SurveyWiFiScansColumns[19]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TechesColumns holds the columns for the "teches" table.
	TechesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "domain_techdomain", Type: field.TypeInt, Nullable: true},
	}
	// TechesTable holds the schema information for the "teches" table.
	TechesTable = &schema.Table{
		Name:       "teches",
		Columns:    TechesColumns,
		PrimaryKey: []*schema.Column{TechesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "teches_domains_techdomain",
				Columns: []*schema.Column{TechesColumns[4]},

				RefColumns: []*schema.Column{DomainsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ThresholdsColumns holds the columns for the "thresholds" table.
	ThresholdsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString},
		{Name: "status", Type: field.TypeBool},
		{Name: "kpi_thresholdkpi", Type: field.TypeInt, Unique: true, Nullable: true},
	}
	// ThresholdsTable holds the schema information for the "thresholds" table.
	ThresholdsTable = &schema.Table{
		Name:       "thresholds",
		Columns:    ThresholdsColumns,
		PrimaryKey: []*schema.Column{ThresholdsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "thresholds_kpis_thresholdkpi",
				Columns: []*schema.Column{ThresholdsColumns[6]},

				RefColumns: []*schema.Column{KpisColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "auth_id", Type: field.TypeString, Unique: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"ACTIVE", "DEACTIVATED"}, Default: "ACTIVE"},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"USER", "ADMIN", "OWNER"}, Default: "USER"},
		{Name: "distance_unit", Type: field.TypeEnum, Enums: []string{"KILOMETER", "MILE"}, Default: "KILOMETER"},
		{Name: "organization_user_fk", Type: field.TypeInt, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_organizations_user_fk",
				Columns: []*schema.Column{UsersColumns[10]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersGroupsColumns holds the columns for the "users_groups" table.
	UsersGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"ACTIVE", "DEACTIVATED"}, Default: "ACTIVE"},
	}
	// UsersGroupsTable holds the schema information for the "users_groups" table.
	UsersGroupsTable = &schema.Table{
		Name:        "users_groups",
		Columns:     UsersGroupsColumns,
		PrimaryKey:  []*schema.Column{UsersGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// VendorsColumns holds the columns for the "vendors" table.
	VendorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// VendorsTable holds the schema information for the "vendors" table.
	VendorsTable = &schema.Table{
		Name:        "vendors",
		Columns:     VendorsColumns,
		PrimaryKey:  []*schema.Column{VendorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// WorkOrdersColumns holds the columns for the "work_orders" table.
	WorkOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"PLANNED", "IN_PROGRESS", "PENDING", "SUBMITTED", "CLOSED", "DONE", "BLOCKED", "CANCELED", "SUSPENDED"}, Default: "PLANNED"},
		{Name: "priority", Type: field.TypeEnum, Enums: []string{"URGENT", "HIGH", "MEDIUM", "LOW", "NONE"}, Default: "NONE"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "install_date", Type: field.TypeTime, Nullable: true},
		{Name: "creation_date", Type: field.TypeTime},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "close_date", Type: field.TypeTime, Nullable: true},
		{Name: "duration", Type: field.TypeFloat64, Nullable: true},
		{Name: "schedulled_at", Type: field.TypeTime, Nullable: true},
		{Name: "due_date", Type: field.TypeTime, Nullable: true},
		{Name: "organization_work_order_fk", Type: field.TypeInt, Nullable: true},
		{Name: "project_work_orders", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_type", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_template", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_location", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_owner", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_assignee", Type: field.TypeInt, Nullable: true},
	}
	// WorkOrdersTable holds the schema information for the "work_orders" table.
	WorkOrdersTable = &schema.Table{
		Name:       "work_orders",
		Columns:    WorkOrdersColumns,
		PrimaryKey: []*schema.Column{WorkOrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "work_orders_organizations_work_order_fk",
				Columns: []*schema.Column{WorkOrdersColumns[14]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_orders_projects_work_orders",
				Columns: []*schema.Column{WorkOrdersColumns[15]},

				RefColumns: []*schema.Column{ProjectsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_orders_work_order_types_type",
				Columns: []*schema.Column{WorkOrdersColumns[16]},

				RefColumns: []*schema.Column{WorkOrderTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_orders_work_order_templates_template",
				Columns: []*schema.Column{WorkOrdersColumns[17]},

				RefColumns: []*schema.Column{WorkOrderTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_orders_locations_location",
				Columns: []*schema.Column{WorkOrdersColumns[18]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_orders_users_owner",
				Columns: []*schema.Column{WorkOrdersColumns[19]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_orders_users_assignee",
				Columns: []*schema.Column{WorkOrdersColumns[20]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workorder_creation_date",
				Unique:  false,
				Columns: []*schema.Column{WorkOrdersColumns[8]},
			},
			{
				Name:    "workorder_close_date",
				Unique:  false,
				Columns: []*schema.Column{WorkOrdersColumns[10]},
			},
			{
				Name:    "workorder_create_time",
				Unique:  false,
				Columns: []*schema.Column{WorkOrdersColumns[1]},
			},
			{
				Name:    "workorder_update_time",
				Unique:  false,
				Columns: []*schema.Column{WorkOrdersColumns[2]},
			},
		},
	}
	// WorkOrderDefinitionsColumns holds the columns for the "work_order_definitions" table.
	WorkOrderDefinitionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "index", Type: field.TypeInt, Nullable: true},
		{Name: "project_template_work_orders", Type: field.TypeInt, Nullable: true},
		{Name: "project_type_work_orders", Type: field.TypeInt, Nullable: true},
		{Name: "work_order_definition_type", Type: field.TypeInt, Nullable: true},
	}
	// WorkOrderDefinitionsTable holds the schema information for the "work_order_definitions" table.
	WorkOrderDefinitionsTable = &schema.Table{
		Name:       "work_order_definitions",
		Columns:    WorkOrderDefinitionsColumns,
		PrimaryKey: []*schema.Column{WorkOrderDefinitionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "work_order_definitions_project_templates_work_orders",
				Columns: []*schema.Column{WorkOrderDefinitionsColumns[4]},

				RefColumns: []*schema.Column{ProjectTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_order_definitions_project_types_work_orders",
				Columns: []*schema.Column{WorkOrderDefinitionsColumns[5]},

				RefColumns: []*schema.Column{ProjectTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "work_order_definitions_work_order_types_type",
				Columns: []*schema.Column{WorkOrderDefinitionsColumns[6]},

				RefColumns: []*schema.Column{WorkOrderTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkOrderTemplatesColumns holds the columns for the "work_order_templates" table.
	WorkOrderTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "assignee_can_complete_work_order", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "duration", Type: field.TypeFloat64, Nullable: true},
		{Name: "work_order_template_type", Type: field.TypeInt, Nullable: true},
	}
	// WorkOrderTemplatesTable holds the schema information for the "work_order_templates" table.
	WorkOrderTemplatesTable = &schema.Table{
		Name:       "work_order_templates",
		Columns:    WorkOrderTemplatesColumns,
		PrimaryKey: []*schema.Column{WorkOrderTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "work_order_templates_work_order_types_type",
				Columns: []*schema.Column{WorkOrderTemplatesColumns[7]},

				RefColumns: []*schema.Column{WorkOrderTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WorkOrderTypesColumns holds the columns for the "work_order_types" table.
	WorkOrderTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "assignee_can_complete_work_order", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "duration", Type: field.TypeFloat64, Nullable: true},
	}
	// WorkOrderTypesTable holds the schema information for the "work_order_types" table.
	WorkOrderTypesTable = &schema.Table{
		Name:        "work_order_types",
		Columns:     WorkOrderTypesColumns,
		PrimaryKey:  []*schema.Column{WorkOrderTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
		Indexes: []*schema.Index{
			{
				Name:    "workordertype_name",
				Unique:  true,
				Columns: []*schema.Column{WorkOrderTypesColumns[3]},
			},
		},
	}
	// WorkerTypesColumns holds the columns for the "worker_types" table.
	WorkerTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
	}
	// WorkerTypesTable holds the schema information for the "worker_types" table.
	WorkerTypesTable = &schema.Table{
		Name:        "worker_types",
		Columns:     WorkerTypesColumns,
		PrimaryKey:  []*schema.Column{WorkerTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// EquipmentPortDefinitionConnectedPortsColumns holds the columns for the "equipment_port_definition_connected_ports" table.
	EquipmentPortDefinitionConnectedPortsColumns = []*schema.Column{
		{Name: "equipment_port_definition_id", Type: field.TypeInt},
		{Name: "connected_port_id", Type: field.TypeInt},
	}
	// EquipmentPortDefinitionConnectedPortsTable holds the schema information for the "equipment_port_definition_connected_ports" table.
	EquipmentPortDefinitionConnectedPortsTable = &schema.Table{
		Name:       "equipment_port_definition_connected_ports",
		Columns:    EquipmentPortDefinitionConnectedPortsColumns,
		PrimaryKey: []*schema.Column{EquipmentPortDefinitionConnectedPortsColumns[0], EquipmentPortDefinitionConnectedPortsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "equipment_port_definition_connected_ports_equipment_port_definition_id",
				Columns: []*schema.Column{EquipmentPortDefinitionConnectedPortsColumns[0]},

				RefColumns: []*schema.Column{EquipmentPortDefinitionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "equipment_port_definition_connected_ports_connected_port_id",
				Columns: []*schema.Column{EquipmentPortDefinitionConnectedPortsColumns[1]},

				RefColumns: []*schema.Column{EquipmentPortDefinitionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ExitPointNextEntryPointsColumns holds the columns for the "exit_point_next_entry_points" table.
	ExitPointNextEntryPointsColumns = []*schema.Column{
		{Name: "exit_point_id", Type: field.TypeInt},
		{Name: "entry_point_id", Type: field.TypeInt},
	}
	// ExitPointNextEntryPointsTable holds the schema information for the "exit_point_next_entry_points" table.
	ExitPointNextEntryPointsTable = &schema.Table{
		Name:       "exit_point_next_entry_points",
		Columns:    ExitPointNextEntryPointsColumns,
		PrimaryKey: []*schema.Column{ExitPointNextEntryPointsColumns[0], ExitPointNextEntryPointsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "exit_point_next_entry_points_exit_point_id",
				Columns: []*schema.Column{ExitPointNextEntryPointsColumns[0]},

				RefColumns: []*schema.Column{ExitPointsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "exit_point_next_entry_points_entry_point_id",
				Columns: []*schema.Column{ExitPointNextEntryPointsColumns[1]},

				RefColumns: []*schema.Column{EntryPointsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// OrganizationPoliciesColumns holds the columns for the "organization_policies" table.
	OrganizationPoliciesColumns = []*schema.Column{
		{Name: "organization_id", Type: field.TypeInt},
		{Name: "permissions_policy_id", Type: field.TypeInt},
	}
	// OrganizationPoliciesTable holds the schema information for the "organization_policies" table.
	OrganizationPoliciesTable = &schema.Table{
		Name:       "organization_policies",
		Columns:    OrganizationPoliciesColumns,
		PrimaryKey: []*schema.Column{OrganizationPoliciesColumns[0], OrganizationPoliciesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "organization_policies_organization_id",
				Columns: []*schema.Column{OrganizationPoliciesColumns[0]},

				RefColumns: []*schema.Column{OrganizationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "organization_policies_permissions_policy_id",
				Columns: []*schema.Column{OrganizationPoliciesColumns[1]},

				RefColumns: []*schema.Column{PermissionsPoliciesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ServiceUpstreamColumns holds the columns for the "service_upstream" table.
	ServiceUpstreamColumns = []*schema.Column{
		{Name: "service_id", Type: field.TypeInt},
		{Name: "downstream_id", Type: field.TypeInt},
	}
	// ServiceUpstreamTable holds the schema information for the "service_upstream" table.
	ServiceUpstreamTable = &schema.Table{
		Name:       "service_upstream",
		Columns:    ServiceUpstreamColumns,
		PrimaryKey: []*schema.Column{ServiceUpstreamColumns[0], ServiceUpstreamColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "service_upstream_service_id",
				Columns: []*schema.Column{ServiceUpstreamColumns[0]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "service_upstream_downstream_id",
				Columns: []*schema.Column{ServiceUpstreamColumns[1]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ServiceLinksColumns holds the columns for the "service_links" table.
	ServiceLinksColumns = []*schema.Column{
		{Name: "service_id", Type: field.TypeInt},
		{Name: "link_id", Type: field.TypeInt},
	}
	// ServiceLinksTable holds the schema information for the "service_links" table.
	ServiceLinksTable = &schema.Table{
		Name:       "service_links",
		Columns:    ServiceLinksColumns,
		PrimaryKey: []*schema.Column{ServiceLinksColumns[0], ServiceLinksColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "service_links_service_id",
				Columns: []*schema.Column{ServiceLinksColumns[0]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "service_links_link_id",
				Columns: []*schema.Column{ServiceLinksColumns[1]},

				RefColumns: []*schema.Column{LinksColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ServicePortsColumns holds the columns for the "service_ports" table.
	ServicePortsColumns = []*schema.Column{
		{Name: "service_id", Type: field.TypeInt},
		{Name: "equipment_port_id", Type: field.TypeInt},
	}
	// ServicePortsTable holds the schema information for the "service_ports" table.
	ServicePortsTable = &schema.Table{
		Name:       "service_ports",
		Columns:    ServicePortsColumns,
		PrimaryKey: []*schema.Column{ServicePortsColumns[0], ServicePortsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "service_ports_service_id",
				Columns: []*schema.Column{ServicePortsColumns[0]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "service_ports_equipment_port_id",
				Columns: []*schema.Column{ServicePortsColumns[1]},

				RefColumns: []*schema.Column{EquipmentPortsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ServiceCustomerColumns holds the columns for the "service_customer" table.
	ServiceCustomerColumns = []*schema.Column{
		{Name: "service_id", Type: field.TypeInt},
		{Name: "customer_id", Type: field.TypeInt},
	}
	// ServiceCustomerTable holds the schema information for the "service_customer" table.
	ServiceCustomerTable = &schema.Table{
		Name:       "service_customer",
		Columns:    ServiceCustomerColumns,
		PrimaryKey: []*schema.Column{ServiceCustomerColumns[0], ServiceCustomerColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "service_customer_service_id",
				Columns: []*schema.Column{ServiceCustomerColumns[0]},

				RefColumns: []*schema.Column{ServicesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "service_customer_customer_id",
				Columns: []*schema.Column{ServiceCustomerColumns[1]},

				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserFeaturesColumns holds the columns for the "user_features" table.
	UserFeaturesColumns = []*schema.Column{
		{Name: "user_id", Type: field.TypeInt},
		{Name: "feature_id", Type: field.TypeInt},
	}
	// UserFeaturesTable holds the schema information for the "user_features" table.
	UserFeaturesTable = &schema.Table{
		Name:       "user_features",
		Columns:    UserFeaturesColumns,
		PrimaryKey: []*schema.Column{UserFeaturesColumns[0], UserFeaturesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "user_features_user_id",
				Columns: []*schema.Column{UserFeaturesColumns[0]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "user_features_feature_id",
				Columns: []*schema.Column{UserFeaturesColumns[1]},

				RefColumns: []*schema.Column{FeaturesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersGroupMembersColumns holds the columns for the "users_group_members" table.
	UsersGroupMembersColumns = []*schema.Column{
		{Name: "users_group_id", Type: field.TypeInt},
		{Name: "user_id", Type: field.TypeInt},
	}
	// UsersGroupMembersTable holds the schema information for the "users_group_members" table.
	UsersGroupMembersTable = &schema.Table{
		Name:       "users_group_members",
		Columns:    UsersGroupMembersColumns,
		PrimaryKey: []*schema.Column{UsersGroupMembersColumns[0], UsersGroupMembersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_group_members_users_group_id",
				Columns: []*schema.Column{UsersGroupMembersColumns[0]},

				RefColumns: []*schema.Column{UsersGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "users_group_members_user_id",
				Columns: []*schema.Column{UsersGroupMembersColumns[1]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersGroupPoliciesColumns holds the columns for the "users_group_policies" table.
	UsersGroupPoliciesColumns = []*schema.Column{
		{Name: "users_group_id", Type: field.TypeInt},
		{Name: "permissions_policy_id", Type: field.TypeInt},
	}
	// UsersGroupPoliciesTable holds the schema information for the "users_group_policies" table.
	UsersGroupPoliciesTable = &schema.Table{
		Name:       "users_group_policies",
		Columns:    UsersGroupPoliciesColumns,
		PrimaryKey: []*schema.Column{UsersGroupPoliciesColumns[0], UsersGroupPoliciesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_group_policies_users_group_id",
				Columns: []*schema.Column{UsersGroupPoliciesColumns[0]},

				RefColumns: []*schema.Column{UsersGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "users_group_policies_permissions_policy_id",
				Columns: []*schema.Column{UsersGroupPoliciesColumns[1]},

				RefColumns: []*schema.Column{PermissionsPoliciesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UsersGroupFeaturesColumns holds the columns for the "users_group_features" table.
	UsersGroupFeaturesColumns = []*schema.Column{
		{Name: "users_group_id", Type: field.TypeInt},
		{Name: "feature_id", Type: field.TypeInt},
	}
	// UsersGroupFeaturesTable holds the schema information for the "users_group_features" table.
	UsersGroupFeaturesTable = &schema.Table{
		Name:       "users_group_features",
		Columns:    UsersGroupFeaturesColumns,
		PrimaryKey: []*schema.Column{UsersGroupFeaturesColumns[0], UsersGroupFeaturesColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "users_group_features_users_group_id",
				Columns: []*schema.Column{UsersGroupFeaturesColumns[0]},

				RefColumns: []*schema.Column{UsersGroupsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:  "users_group_features_feature_id",
				Columns: []*schema.Column{UsersGroupFeaturesColumns[1]},

				RefColumns: []*schema.Column{FeaturesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivitiesTable,
		AlarmFiltersTable,
		AlarmStatusTable,
		AppointmentsTable,
		BlocksTable,
		BlockInstancesTable,
		CheckListCategoriesTable,
		CheckListCategoryDefinitionsTable,
		CheckListItemsTable,
		CheckListItemDefinitionsTable,
		CommentsTable,
		ComparatorsTable,
		CountersTable,
		CounterFamiliesTable,
		CounterFormulasTable,
		CustomersTable,
		DocumentCategoriesTable,
		DomainsTable,
		EntryPointsTable,
		EquipmentTable,
		EquipmentCategoriesTable,
		EquipmentPortsTable,
		EquipmentPortDefinitionsTable,
		EquipmentPortTypesTable,
		EquipmentPositionsTable,
		EquipmentPositionDefinitionsTable,
		EquipmentTypesTable,
		EventSeveritiesTable,
		ExitPointsTable,
		ExportTasksTable,
		FeaturesTable,
		FilesTable,
		FloorPlansTable,
		FloorPlanReferencePointsTable,
		FloorPlanScalesTable,
		FlowsTable,
		FlowDraftsTable,
		FlowExecutionTemplatesTable,
		FlowInstancesTable,
		FormulasTable,
		HyperlinksTable,
		KpisTable,
		KpiCategoriesTable,
		KqisTable,
		KqiCategoriesTable,
		KqiComparatorsTable,
		KqiPerspectivesTable,
		KqiSourcesTable,
		KqiTargetsTable,
		KqiTemporalFrequenciesTable,
		LinksTable,
		LocationsTable,
		LocationTypesTable,
		NetworkTypesTable,
		OrganizationsTable,
		ParameterCatalogsTable,
		PermissionsPoliciesTable,
		ProjectsTable,
		ProjectTemplatesTable,
		ProjectTypesTable,
		PropertiesTable,
		PropertyCategoriesTable,
		PropertyTypesTable,
		RecommendationsTable,
		RecommendationsCategoriesTable,
		RecommendationsSourcesTable,
		ReportFiltersTable,
		RulesTable,
		RuleLimitsTable,
		RuleTypesTable,
		ServicesTable,
		ServiceEndpointsTable,
		ServiceEndpointDefinitionsTable,
		ServiceTypesTable,
		SurveysTable,
		SurveyCellScansTable,
		SurveyQuestionsTable,
		SurveyTemplateCategoriesTable,
		SurveyTemplateQuestionsTable,
		SurveyWiFiScansTable,
		TechesTable,
		ThresholdsTable,
		UsersTable,
		UsersGroupsTable,
		VendorsTable,
		WorkOrdersTable,
		WorkOrderDefinitionsTable,
		WorkOrderTemplatesTable,
		WorkOrderTypesTable,
		WorkerTypesTable,
		EquipmentPortDefinitionConnectedPortsTable,
		ExitPointNextEntryPointsTable,
		OrganizationPoliciesTable,
		ServiceUpstreamTable,
		ServiceLinksTable,
		ServicePortsTable,
		ServiceCustomerTable,
		UserFeaturesTable,
		UsersGroupMembersTable,
		UsersGroupPoliciesTable,
		UsersGroupFeaturesTable,
	}
)

func init() {
	ActivitiesTable.ForeignKeys[0].RefTable = UsersTable
	ActivitiesTable.ForeignKeys[1].RefTable = WorkOrdersTable
	AlarmFiltersTable.ForeignKeys[0].RefTable = AlarmStatusTable
	AppointmentsTable.ForeignKeys[0].RefTable = UsersTable
	AppointmentsTable.ForeignKeys[1].RefTable = WorkOrdersTable
	BlocksTable.ForeignKeys[0].RefTable = FlowsTable
	BlocksTable.ForeignKeys[1].RefTable = BlocksTable
	BlocksTable.ForeignKeys[2].RefTable = FlowsTable
	BlocksTable.ForeignKeys[3].RefTable = FlowDraftsTable
	BlocksTable.ForeignKeys[4].RefTable = FlowExecutionTemplatesTable
	BlockInstancesTable.ForeignKeys[0].RefTable = BlocksTable
	BlockInstancesTable.ForeignKeys[1].RefTable = FlowInstancesTable
	CheckListCategoriesTable.ForeignKeys[0].RefTable = WorkOrdersTable
	CheckListCategoryDefinitionsTable.ForeignKeys[0].RefTable = WorkOrderTemplatesTable
	CheckListCategoryDefinitionsTable.ForeignKeys[1].RefTable = WorkOrderTypesTable
	CheckListItemsTable.ForeignKeys[0].RefTable = CheckListCategoriesTable
	CheckListItemDefinitionsTable.ForeignKeys[0].RefTable = CheckListCategoryDefinitionsTable
	CommentsTable.ForeignKeys[0].RefTable = UsersTable
	CommentsTable.ForeignKeys[1].RefTable = ProjectsTable
	CommentsTable.ForeignKeys[2].RefTable = WorkOrdersTable
	CountersTable.ForeignKeys[0].RefTable = CounterFamiliesTable
	CountersTable.ForeignKeys[1].RefTable = VendorsTable
	CounterFormulasTable.ForeignKeys[0].RefTable = CountersTable
	CounterFormulasTable.ForeignKeys[1].RefTable = FormulasTable
	DocumentCategoriesTable.ForeignKeys[0].RefTable = LocationTypesTable
	EntryPointsTable.ForeignKeys[0].RefTable = BlocksTable
	EquipmentTable.ForeignKeys[0].RefTable = EquipmentTypesTable
	EquipmentTable.ForeignKeys[1].RefTable = WorkOrdersTable
	EquipmentTable.ForeignKeys[2].RefTable = EquipmentPositionsTable
	EquipmentTable.ForeignKeys[3].RefTable = LocationsTable
	EquipmentPortsTable.ForeignKeys[0].RefTable = EquipmentTable
	EquipmentPortsTable.ForeignKeys[1].RefTable = EquipmentPortDefinitionsTable
	EquipmentPortsTable.ForeignKeys[2].RefTable = LinksTable
	EquipmentPortDefinitionsTable.ForeignKeys[0].RefTable = EquipmentPortTypesTable
	EquipmentPortDefinitionsTable.ForeignKeys[1].RefTable = EquipmentTypesTable
	EquipmentPositionsTable.ForeignKeys[0].RefTable = EquipmentTable
	EquipmentPositionsTable.ForeignKeys[1].RefTable = EquipmentPositionDefinitionsTable
	EquipmentPositionDefinitionsTable.ForeignKeys[0].RefTable = EquipmentTypesTable
	EquipmentTypesTable.ForeignKeys[0].RefTable = EquipmentCategoriesTable
	ExitPointsTable.ForeignKeys[0].RefTable = BlocksTable
	FilesTable.ForeignKeys[0].RefTable = CheckListItemsTable
	FilesTable.ForeignKeys[1].RefTable = DocumentCategoriesTable
	FilesTable.ForeignKeys[2].RefTable = EquipmentTable
	FilesTable.ForeignKeys[3].RefTable = FloorPlansTable
	FilesTable.ForeignKeys[4].RefTable = LocationsTable
	FilesTable.ForeignKeys[5].RefTable = SurveysTable
	FilesTable.ForeignKeys[6].RefTable = SurveyQuestionsTable
	FilesTable.ForeignKeys[7].RefTable = SurveyQuestionsTable
	FilesTable.ForeignKeys[8].RefTable = UsersTable
	FilesTable.ForeignKeys[9].RefTable = WorkOrdersTable
	FloorPlansTable.ForeignKeys[0].RefTable = LocationsTable
	FloorPlansTable.ForeignKeys[1].RefTable = FloorPlanReferencePointsTable
	FloorPlansTable.ForeignKeys[2].RefTable = FloorPlanScalesTable
	FlowDraftsTable.ForeignKeys[0].RefTable = FlowsTable
	FlowInstancesTable.ForeignKeys[0].RefTable = BlockInstancesTable
	FlowInstancesTable.ForeignKeys[1].RefTable = FlowsTable
	FlowInstancesTable.ForeignKeys[2].RefTable = FlowExecutionTemplatesTable
	FormulasTable.ForeignKeys[0].RefTable = KpisTable
	FormulasTable.ForeignKeys[1].RefTable = NetworkTypesTable
	FormulasTable.ForeignKeys[2].RefTable = TechesTable
	HyperlinksTable.ForeignKeys[0].RefTable = DocumentCategoriesTable
	HyperlinksTable.ForeignKeys[1].RefTable = EquipmentTable
	HyperlinksTable.ForeignKeys[2].RefTable = LocationsTable
	HyperlinksTable.ForeignKeys[3].RefTable = WorkOrdersTable
	KpisTable.ForeignKeys[0].RefTable = DomainsTable
	KpisTable.ForeignKeys[1].RefTable = KpiCategoriesTable
	KqisTable.ForeignKeys[0].RefTable = KqiCategoriesTable
	KqisTable.ForeignKeys[1].RefTable = KqiPerspectivesTable
	KqisTable.ForeignKeys[2].RefTable = KqiSourcesTable
	KqisTable.ForeignKeys[3].RefTable = KqiTemporalFrequenciesTable
	KqiComparatorsTable.ForeignKeys[0].RefTable = ComparatorsTable
	KqiComparatorsTable.ForeignKeys[1].RefTable = KqiTargetsTable
	KqiTargetsTable.ForeignKeys[0].RefTable = KqisTable
	LinksTable.ForeignKeys[0].RefTable = WorkOrdersTable
	LocationsTable.ForeignKeys[0].RefTable = LocationTypesTable
	LocationsTable.ForeignKeys[1].RefTable = LocationsTable
	ProjectsTable.ForeignKeys[0].RefTable = ProjectTemplatesTable
	ProjectsTable.ForeignKeys[1].RefTable = LocationsTable
	ProjectsTable.ForeignKeys[2].RefTable = UsersTable
	ProjectsTable.ForeignKeys[3].RefTable = ProjectTypesTable
	ProjectTemplatesTable.ForeignKeys[0].RefTable = ProjectTypesTable
	PropertiesTable.ForeignKeys[0].RefTable = EquipmentTable
	PropertiesTable.ForeignKeys[1].RefTable = EquipmentPortsTable
	PropertiesTable.ForeignKeys[2].RefTable = LinksTable
	PropertiesTable.ForeignKeys[3].RefTable = LocationsTable
	PropertiesTable.ForeignKeys[4].RefTable = ProjectsTable
	PropertiesTable.ForeignKeys[5].RefTable = PropertyTypesTable
	PropertiesTable.ForeignKeys[6].RefTable = EquipmentTable
	PropertiesTable.ForeignKeys[7].RefTable = LocationsTable
	PropertiesTable.ForeignKeys[8].RefTable = ServicesTable
	PropertiesTable.ForeignKeys[9].RefTable = WorkOrdersTable
	PropertiesTable.ForeignKeys[10].RefTable = UsersTable
	PropertiesTable.ForeignKeys[11].RefTable = ProjectsTable
	PropertiesTable.ForeignKeys[12].RefTable = ServicesTable
	PropertiesTable.ForeignKeys[13].RefTable = WorkOrdersTable
	PropertyCategoriesTable.ForeignKeys[0].RefTable = ParameterCatalogsTable
	PropertyTypesTable.ForeignKeys[0].RefTable = EquipmentPortTypesTable
	PropertyTypesTable.ForeignKeys[1].RefTable = EquipmentPortTypesTable
	PropertyTypesTable.ForeignKeys[2].RefTable = EquipmentTypesTable
	PropertyTypesTable.ForeignKeys[3].RefTable = LocationTypesTable
	PropertyTypesTable.ForeignKeys[4].RefTable = ProjectTemplatesTable
	PropertyTypesTable.ForeignKeys[5].RefTable = ProjectTypesTable
	PropertyTypesTable.ForeignKeys[6].RefTable = PropertyCategoriesTable
	PropertyTypesTable.ForeignKeys[7].RefTable = ServiceTypesTable
	PropertyTypesTable.ForeignKeys[8].RefTable = WorkOrderTemplatesTable
	PropertyTypesTable.ForeignKeys[9].RefTable = WorkOrderTypesTable
	PropertyTypesTable.ForeignKeys[10].RefTable = WorkerTypesTable
	RecommendationsTable.ForeignKeys[0].RefTable = RecommendationsCategoriesTable
	RecommendationsTable.ForeignKeys[1].RefTable = RecommendationsSourcesTable
	RecommendationsTable.ForeignKeys[2].RefTable = UsersTable
	RecommendationsTable.ForeignKeys[3].RefTable = UsersTable
	RecommendationsTable.ForeignKeys[4].RefTable = VendorsTable
	RulesTable.ForeignKeys[0].RefTable = EventSeveritiesTable
	RulesTable.ForeignKeys[1].RefTable = RuleTypesTable
	RulesTable.ForeignKeys[2].RefTable = ThresholdsTable
	RuleLimitsTable.ForeignKeys[0].RefTable = ComparatorsTable
	RuleLimitsTable.ForeignKeys[1].RefTable = RulesTable
	ServicesTable.ForeignKeys[0].RefTable = ServiceTypesTable
	ServiceEndpointsTable.ForeignKeys[0].RefTable = ServicesTable
	ServiceEndpointsTable.ForeignKeys[1].RefTable = EquipmentPortsTable
	ServiceEndpointsTable.ForeignKeys[2].RefTable = EquipmentTable
	ServiceEndpointsTable.ForeignKeys[3].RefTable = ServiceEndpointDefinitionsTable
	ServiceEndpointDefinitionsTable.ForeignKeys[0].RefTable = EquipmentTypesTable
	ServiceEndpointDefinitionsTable.ForeignKeys[1].RefTable = ServiceTypesTable
	SurveysTable.ForeignKeys[0].RefTable = LocationsTable
	SurveyCellScansTable.ForeignKeys[0].RefTable = CheckListItemsTable
	SurveyCellScansTable.ForeignKeys[1].RefTable = SurveyQuestionsTable
	SurveyCellScansTable.ForeignKeys[2].RefTable = LocationsTable
	SurveyQuestionsTable.ForeignKeys[0].RefTable = SurveysTable
	SurveyTemplateCategoriesTable.ForeignKeys[0].RefTable = LocationTypesTable
	SurveyTemplateQuestionsTable.ForeignKeys[0].RefTable = SurveyTemplateCategoriesTable
	SurveyWiFiScansTable.ForeignKeys[0].RefTable = CheckListItemsTable
	SurveyWiFiScansTable.ForeignKeys[1].RefTable = SurveyQuestionsTable
	SurveyWiFiScansTable.ForeignKeys[2].RefTable = LocationsTable
	TechesTable.ForeignKeys[0].RefTable = DomainsTable
	ThresholdsTable.ForeignKeys[0].RefTable = KpisTable
	UsersTable.ForeignKeys[0].RefTable = OrganizationsTable
	WorkOrdersTable.ForeignKeys[0].RefTable = OrganizationsTable
	WorkOrdersTable.ForeignKeys[1].RefTable = ProjectsTable
	WorkOrdersTable.ForeignKeys[2].RefTable = WorkOrderTypesTable
	WorkOrdersTable.ForeignKeys[3].RefTable = WorkOrderTemplatesTable
	WorkOrdersTable.ForeignKeys[4].RefTable = LocationsTable
	WorkOrdersTable.ForeignKeys[5].RefTable = UsersTable
	WorkOrdersTable.ForeignKeys[6].RefTable = UsersTable
	WorkOrderDefinitionsTable.ForeignKeys[0].RefTable = ProjectTemplatesTable
	WorkOrderDefinitionsTable.ForeignKeys[1].RefTable = ProjectTypesTable
	WorkOrderDefinitionsTable.ForeignKeys[2].RefTable = WorkOrderTypesTable
	WorkOrderTemplatesTable.ForeignKeys[0].RefTable = WorkOrderTypesTable
	EquipmentPortDefinitionConnectedPortsTable.ForeignKeys[0].RefTable = EquipmentPortDefinitionsTable
	EquipmentPortDefinitionConnectedPortsTable.ForeignKeys[1].RefTable = EquipmentPortDefinitionsTable
	ExitPointNextEntryPointsTable.ForeignKeys[0].RefTable = ExitPointsTable
	ExitPointNextEntryPointsTable.ForeignKeys[1].RefTable = EntryPointsTable
	OrganizationPoliciesTable.ForeignKeys[0].RefTable = OrganizationsTable
	OrganizationPoliciesTable.ForeignKeys[1].RefTable = PermissionsPoliciesTable
	ServiceUpstreamTable.ForeignKeys[0].RefTable = ServicesTable
	ServiceUpstreamTable.ForeignKeys[1].RefTable = ServicesTable
	ServiceLinksTable.ForeignKeys[0].RefTable = ServicesTable
	ServiceLinksTable.ForeignKeys[1].RefTable = LinksTable
	ServicePortsTable.ForeignKeys[0].RefTable = ServicesTable
	ServicePortsTable.ForeignKeys[1].RefTable = EquipmentPortsTable
	ServiceCustomerTable.ForeignKeys[0].RefTable = ServicesTable
	ServiceCustomerTable.ForeignKeys[1].RefTable = CustomersTable
	UserFeaturesTable.ForeignKeys[0].RefTable = UsersTable
	UserFeaturesTable.ForeignKeys[1].RefTable = FeaturesTable
	UsersGroupMembersTable.ForeignKeys[0].RefTable = UsersGroupsTable
	UsersGroupMembersTable.ForeignKeys[1].RefTable = UsersTable
	UsersGroupPoliciesTable.ForeignKeys[0].RefTable = UsersGroupsTable
	UsersGroupPoliciesTable.ForeignKeys[1].RefTable = PermissionsPoliciesTable
	UsersGroupFeaturesTable.ForeignKeys[0].RefTable = UsersGroupsTable
	UsersGroupFeaturesTable.ForeignKeys[1].RefTable = FeaturesTable
}
