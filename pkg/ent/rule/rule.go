// Copyright (c) 2004-present Facebook All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// Code generated by entc, DO NOT EDIT.

package rule

import (
	"time"

	"github.com/facebook/ent"
)

const (
	// Label holds the string label denoting the rule type in the database.
	Label = "rule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldGracePeriod holds the string denoting the graceperiod field in the database.
	FieldGracePeriod = "grace_period"
	// FieldStartDateTime holds the string denoting the startdatetime field in the database.
	FieldStartDateTime = "start_date_time"
	// FieldEndDateTime holds the string denoting the enddatetime field in the database.
	FieldEndDateTime = "end_date_time"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldEventTypeName holds the string denoting the eventtypename field in the database.
	FieldEventTypeName = "event_type_name"
	// FieldSpecificProblem holds the string denoting the specificproblem field in the database.
	FieldSpecificProblem = "specific_problem"
	// FieldAdditionalInfo holds the string denoting the additionalinfo field in the database.
	FieldAdditionalInfo = "additional_info"

	// EdgeRuletype holds the string denoting the ruletype edge name in mutations.
	EdgeRuletype = "ruletype"
	// EdgeEventseverity holds the string denoting the eventseverity edge name in mutations.
	EdgeEventseverity = "eventseverity"
	// EdgeThreshold holds the string denoting the threshold edge name in mutations.
	EdgeThreshold = "threshold"
	// EdgeRulelimitrule holds the string denoting the rulelimitrule edge name in mutations.
	EdgeRulelimitrule = "rulelimitrule"

	// Table holds the table name of the rule in the database.
	Table = "rules"
	// RuletypeTable is the table the holds the ruletype relation/edge.
	RuletypeTable = "rules"
	// RuletypeInverseTable is the table name for the RuleType entity.
	// It exists in this package in order to avoid circular dependency with the "ruletype" package.
	RuletypeInverseTable = "rule_types"
	// RuletypeColumn is the table column denoting the ruletype relation/edge.
	RuletypeColumn = "rule_type_ruletyperule"
	// EventseverityTable is the table the holds the eventseverity relation/edge.
	EventseverityTable = "rules"
	// EventseverityInverseTable is the table name for the EventSeverity entity.
	// It exists in this package in order to avoid circular dependency with the "eventseverity" package.
	EventseverityInverseTable = "event_severities"
	// EventseverityColumn is the table column denoting the eventseverity relation/edge.
	EventseverityColumn = "event_severity_eventseverityrule"
	// ThresholdTable is the table the holds the threshold relation/edge.
	ThresholdTable = "rules"
	// ThresholdInverseTable is the table name for the Threshold entity.
	// It exists in this package in order to avoid circular dependency with the "threshold" package.
	ThresholdInverseTable = "thresholds"
	// ThresholdColumn is the table column denoting the threshold relation/edge.
	ThresholdColumn = "threshold_rulethreshold"
	// RulelimitruleTable is the table the holds the rulelimitrule relation/edge.
	RulelimitruleTable = "rule_limits"
	// RulelimitruleInverseTable is the table name for the RuleLimit entity.
	// It exists in this package in order to avoid circular dependency with the "rulelimit" package.
	RulelimitruleInverseTable = "rule_limits"
	// RulelimitruleColumn is the table column denoting the rulelimitrule relation/edge.
	RulelimitruleColumn = "rule_rulelimitrule"
)

// Columns holds all SQL columns for rule fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
	FieldGracePeriod,
	FieldStartDateTime,
	FieldEndDateTime,
	FieldStatus,
	FieldEventTypeName,
	FieldSpecificProblem,
	FieldAdditionalInfo,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Rule type.
var ForeignKeys = []string{
	"event_severity_eventseverityrule",
	"rule_type_ruletyperule",
	"threshold_rulethreshold",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/facebookincubator/symphony/pkg/ent/runtime"
//
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
